var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/classes/AStar.html",[0,0.204,1,1.097]],["body/classes/AStar.html",[0,0.243,1,1.303,2,0.505,3,0.505,4,0.384,5,1.294,6,0.814,7,2.435,8,2.676,9,2.046,10,2.435,11,2.297,12,3.201,13,3.031,14,1.691,15,0.47,16,0.722,17,2.851,18,3.481,19,2.839,20,3.481,21,3.481,22,2.435,23,0.973,24,2.435,25,0.973,26,0.045,27,0.973,28,0.739,29,1.1,30,1.084,31,0.646,32,2.435,33,4.432,34,2.435,35,3.481,36,0.726,37,2.435,38,2.435,39,2.435,40,2.435,41,2.192,42,2.435,43,2.435,44,0.384,45,1.47,46,2.528,47,1.47,48,1.47,49,2.101,50,1.47,51,0.912,52,1.47,53,0.573,54,1.47,55,1.47,56,1.47,57,1.47,58,1.47,59,1.47,60,1.47,61,1.47,62,1.47,63,1.47,64,1.176,65,1.47,66,1.47,67,1.47,68,2.452,69,1.47,70,1.47,71,1.47,72,1.47,73,2.452,74,1.47,75,2.101,76,0.034,77,1.64,78,1.47,79,1.47,80,1.47,81,1.47,82,1.294,83,1.47,84,1.47,85,1.47,86,2.452,87,1.47,88,0.912,89,1.147,90,1.47,91,1.47,92,1.47,93,1.47,94,1.47,95,1.47,96,1.47,97,1.47,98,1.47,99,1.47,100,1.47,101,1.47,102,1.294,103,1.47,104,1.47,105,1.47,106,2.088,107,1.47,108,1.47,109,1.47,110,2.452,111,1.47,112,1.47,113,1.47,114,1.47,115,1.47,116,1.47,117,1.147,118,1.47,119,1.47,120,0.026]],["title/classes/BinaryHeap.html",[0,0.204,121,2.035]],["body/classes/BinaryHeap.html",[0,0.241,1,0.903,2,0.501,3,0.501,4,0.38,5,1.282,8,1.456,9,1.45,11,1.904,12,3.023,13,2.935,15,0.467,16,0.717,17,1.282,23,1.098,25,1.009,26,0.045,27,1.009,28,0.808,29,1.082,30,1.111,31,1.24,41,1.695,44,0.38,45,1.456,46,2.523,47,1.456,48,1.456,49,2.087,50,1.456,51,0.903,52,1.456,53,0.567,54,1.456,55,1.456,56,1.456,57,1.456,58,1.456,59,1.456,60,1.456,61,1.456,62,1.456,63,1.456,64,1.171,65,1.456,66,1.456,67,1.456,68,2.44,69,1.456,70,1.456,71,1.456,72,1.456,73,2.44,74,1.456,75,2.087,76,0.034,77,1.629,78,1.456,79,1.456,80,1.456,81,1.456,82,1.282,83,1.456,84,1.456,85,1.456,86,2.44,87,1.456,88,0.903,89,1.136,90,1.456,91,1.456,92,1.456,93,1.456,94,1.456,95,1.456,96,2.44,97,1.456,98,1.456,99,2.664,100,1.456,101,1.456,102,1.282,103,1.456,104,1.456,105,1.456,106,2.079,107,1.456,108,1.456,109,1.456,110,2.44,111,1.456,112,1.456,113,1.456,114,2.44,115,1.456,116,1.456,117,1.629,118,1.456,119,1.456,120,0.026,121,1.675,122,0.917,123,4.041,124,4.413,125,3.457,126,3.457,127,3.457,128,3.457,129,4.041,130,0.64,131,2.412,132,3.457,133,2.412,134,2.412,135,2.412,136,2.412,137,2.412,138,2.412,139,2.412,140,2.412,141,2.412,142,2.412,143,2.412,144,2.412,145,2.412]],["title/classes/Camera.html",[0,0.204,146,1.77]],["body/classes/Camera.html",[0,0.33,2,0.587,3,0.587,4,0.446,6,1.292,15,0.523,16,0.802,23,1.087,25,0.914,26,0.045,27,0.914,28,0.826,29,0.914,30,0.802,31,1.026,36,1.525,44,0.446,64,1.026,76,0.029,120,0.029,122,1.026,130,1.026,146,3.218,147,2.309,148,4.733,149,4.733,150,1.782,151,4.733,152,4.41,153,1.656,154,1.965,155,3.867,156,2.34,157,2.83,158,2.83,159,2.35,160,2.83,161,2.83,162,2.83,163,3.867,164,3.154,165,1.187,166,2.83,167,2.685,168,1.822,169,1.472,170,1.026,171,2.309,172,4.404,173,1.965,174,2.83,175,2.83,176,2.83,177,2.83,178,2.335,179,2.83,180,2.83,181,2.83,182,2.83,183,3.867,184,2.83,185,2.83,186,3.154,187,3.867,188,2.83,189,2.83]],["title/classes/CutScene.html",[0,0.204,190,1.77]],["body/classes/CutScene.html",[0,0.211,2,0.417,3,0.417,4,0.317,6,1.214,15,0.271,16,0.627,23,1.082,25,0.839,26,0.046,27,1.068,28,0.812,29,0.839,30,0.98,31,0.964,36,1.695,44,0.317,51,0.752,64,0.964,76,0.023,77,0.946,82,1.93,88,1.131,106,2.29,120,0.023,122,0.802,130,0.802,153,1.214,156,2.147,159,1.524,165,0.842,168,0.946,169,1.01,170,1.15,190,2.44,191,1.394,192,4.041,193,3.296,194,3.296,195,2.583,196,1.555,197,4.041,198,4.041,199,3.632,200,1.394,201,2.343,202,3.021,203,2.008,204,2.008,205,2.008,206,2.008,207,2.008,208,2.008,209,2.008,210,2.008,211,2.419,212,2.419,213,4.041,214,2.042,215,4.041,216,2.008,217,3.632,218,2.008,219,2.008,220,2.008,221,4.041,222,0.752,223,0.671,224,1.524,225,1.423,226,1.067,227,1.067,228,1.212,229,1.394,230,1.067,231,4.041,232,4.333,233,4.861,234,4.861,235,2.008,236,1.212,237,1.067,238,2.008,239,2.008,240,3.021,241,2.008,242,3.021,243,2.008,244,1.394,245,2.008,246,4.333,247,4.333,248,3.632,249,2.008,250,2.008,251,2.963,252,2.008,253,2.008,254,3.021,255,2.008,256,3.021,257,2.008,258,2.008,259,2.008,260,2.008,261,2.008]],["title/classes/Game.html",[0,0.204,150,0.98]],["body/classes/Game.html",[0,0.252,1,0.612,2,0.339,3,0.339,4,0.258,6,1.067,15,0.221,16,0.535,23,1.114,25,0.752,26,0.045,27,0.91,28,0.805,29,0.752,30,1.071,31,1.112,36,1.249,44,0.738,51,1.569,53,1.127,64,0.684,76,0.02,77,1.214,88,0.612,106,1.214,117,0.77,120,0.02,122,0.684,130,0.684,146,2.53,150,1.318,153,1.067,159,0.685,164,2.102,165,0.685,167,1.134,168,1.214,169,0.861,170,1.046,178,1.927,190,0.986,196,1.633,201,1.858,222,1.195,223,0.546,224,1.52,225,0.77,226,1.369,227,0.868,229,1.134,236,0.986,237,0.868,262,1.134,263,3.623,264,3.623,265,3.623,266,4.546,267,2.516,268,3.623,269,3.623,270,3.623,271,3.191,272,3.623,273,3.623,274,3.623,275,3.623,276,1.211,277,3.623,278,3.191,279,1.634,280,3.623,281,2.577,282,3.191,283,3.623,284,1.634,285,1.634,286,1.634,287,1.634,288,1.634,289,1.634,290,3.623,291,1.634,292,1.634,293,3.418,294,1.634,295,1.707,296,1.634,297,1.634,298,1.927,299,2.102,300,3.623,301,2.102,302,1.634,303,1.634,304,1.634,305,1.634,306,1.634,307,1.634,308,1.634,309,1.634,310,2.577,311,3.943,312,1.634,313,0.77,314,0.868,315,1.333,316,0.77,317,1.333,318,1.634,319,1.634,320,1.634,321,1.634,322,1.634,323,1.634,324,1.634,325,1.634,326,1.634,327,1.333,328,1.634,329,1.634,330,1.634,331,1.654,332,1.634,333,1.634,334,0.986,335,1.634,336,1.634,337,1.634,338,2.577,339,1.634,340,2.577,341,1.634,342,1.634,343,1.634,344,1.634,345,1.634,346,1.634,347,1.634,348,1.634,349,1.634,350,1.634,351,1.333,352,1.634,353,1.634,354,1.634,355,1.634,356,1.634,357,0.868,358,1.634,359,0.986,360,1.634,361,3.623,362,3.623,363,1.634,364,1.634,365,1.634,366,1.634,367,1.634,368,1.333,369,1.634,370,1.634,371,1.634,372,1.134,373,1.634,374,1.634,375,1.634,376,1.634,377,1.634,378,1.634,379,1.634,380,1.634,381,1.634,382,1.634,383,1.634,384,1.634,385,1.634,386,1.634,387,3.191,388,1.634,389,1.634,390,1.634,391,1.634,392,2.577,393,2.577,394,1.333,395,1.634,396,1.634,397,1.634,398,1.634,399,2.577,400,2.577,401,1.634,402,1.634,403,1.634,404,1.634,405,1.634,406,1.634,407,1.634,408,1.634,409,1.634,410,1.634,411,1.634,412,3.623,413,2.577,414,1.634,415,1.634]],["title/classes/GameObject.html",[0,0.204,159,1.23]],["body/classes/GameObject.html",[0,0.21,2,0.311,3,0.311,4,0.236,6,1.593,15,0.202,16,0.499,23,1.111,25,0.989,26,0.045,27,1.081,28,0.821,29,0.989,30,1.062,31,1.265,36,1.525,44,0.379,46,0.705,51,0.56,53,0.949,64,1.265,76,0.018,88,0.56,120,0.018,122,0.638,130,0.638,150,0.5,153,1.262,156,1.832,159,1.848,165,0.628,167,2.8,168,1.779,169,0.803,170,1.002,173,1.039,178,0.904,186,1.961,195,2.341,196,1.448,200,1.039,201,1.9,211,2.143,212,2.533,214,1.625,222,0.56,223,0.5,224,1.447,225,1.132,226,1.277,227,0.795,228,0.904,229,1.039,230,1.6,237,1.277,276,1.348,295,0.705,301,1.221,316,0.705,331,0.628,357,0.795,372,2.8,416,1.221,417,1.039,418,4.032,419,3.448,420,3.448,421,3.448,422,2.403,423,3.29,424,2.403,425,2.403,426,3.776,427,3.448,428,3.448,429,2.403,430,3.448,431,3.012,432,2.403,433,2.403,434,1.497,435,3.776,436,1.497,437,2.394,438,1.497,439,1.497,440,1.497,441,1.497,442,1.497,443,1.961,444,1.961,445,1.961,446,4.665,447,1.497,448,1.221,449,1.497,450,1.497,451,1.497,452,1.497,453,2.403,454,2.403,455,3.29,456,2.403,457,1.497,458,1.497,459,1.497,460,1.497,461,4.032,462,1.497,463,1.497,464,1.497,465,1.497,466,1.497,467,3.776,468,1.497,469,1.497,470,1.497,471,2.403,472,2.403,473,2.403,474,3.448,475,1.497,476,1.497,477,1.497,478,1.497,479,3.012,480,1.497,481,1.497,482,2.403,483,1.497,484,1.497,485,1.221,486,1.497,487,1.497,488,1.497,489,1.497,490,1.497,491,1.497,492,1.497,493,1.497,494,1.497,495,1.497,496,1.497,497,1.497,498,1.132,499,1.497,500,0.904,501,3.012,502,1.497,503,3.776,504,1.497,505,3.012,506,1.961,507,3.012,508,2.403,509,1.497,510,2.403,511,1.497,512,1.497,513,2.403,514,2.403,515,2.403,516,2.403,517,2.403,518,2.403,519,2.403,520,2.403,521,2.403,522,2.403,523,2.403,524,2.403,525,1.497,526,1.497,527,1.221,528,2.403,529,1.497,530,0.795,531,1.497,532,3.012,533,1.497,534,1.497,535,2.403,536,1.497,537,1.221,538,1.497,539,2.403,540,1.497,541,1.497,542,2.403,543,2.403,544,1.497,545,1.497,546,1.497]],["title/classes/Graph.html",[0,0.204,9,1.23]],["body/classes/Graph.html",[0,0.244,1,0.917,2,0.509,3,0.509,4,0.386,5,1.302,6,0.819,8,1.48,9,1.865,11,1.92,12,3.037,13,3.16,14,1.702,15,0.473,16,0.726,17,1.302,19,3.325,23,1.102,25,0.846,26,0.045,27,0.846,28,0.793,29,1.067,30,1.086,31,1.082,41,1.71,44,0.386,45,1.48,46,2.531,47,1.48,48,1.48,49,2.111,50,1.48,51,0.917,52,1.48,53,0.577,54,1.48,55,1.48,56,1.48,57,1.48,58,1.48,59,1.48,60,1.48,61,1.48,62,1.48,63,1.48,64,1.179,65,1.48,66,1.48,67,1.48,68,2.461,69,1.48,70,1.48,71,1.48,72,1.48,73,2.461,74,1.48,75,2.111,76,0.034,77,1.647,78,1.48,79,1.48,80,1.48,81,1.48,82,1.302,83,1.48,84,1.48,85,1.48,86,2.838,87,1.48,88,0.917,89,1.155,90,1.48,91,1.48,92,1.48,93,1.48,94,1.48,95,1.48,96,1.48,97,1.48,98,1.48,99,1.48,100,1.48,101,1.48,102,1.302,103,1.48,104,1.48,105,1.48,106,2.094,107,1.48,108,1.48,109,1.48,110,2.461,111,1.48,112,1.48,113,1.48,114,1.48,115,1.48,116,1.48,117,1.155,118,1.48,119,1.48,120,0.027,122,0.928,130,0.65,214,1.647,276,1.363,547,2.451,548,2.451,549,4.076,550,3.325,551,4.076,552,3.496,553,3.325,554,2.451,555,3.496,556,2.451,557,2.451,558,2.451,559,2.451,560,2.451,561,2.451,562,2.451,563,2.451,564,2.451,565,2.451,566,2.451]],["title/classes/GridNode.html",[0,0.204,41,1.23]],["body/classes/GridNode.html",[0,0.228,1,0.836,2,0.463,3,0.463,4,0.352,5,1.187,8,1.348,9,1.371,11,1.822,12,2.952,13,2.57,15,0.442,16,0.678,17,1.187,23,1.117,25,0.678,26,0.045,27,0.678,28,0.831,29,0.94,30,1.015,36,1.605,41,1.786,44,0.352,45,1.348,46,2.483,47,1.348,48,1.348,49,1.974,50,1.348,51,1.448,52,1.348,53,0.525,54,1.348,55,1.348,56,1.348,57,1.348,58,1.348,59,1.348,60,1.348,61,1.348,62,1.348,63,1.348,64,1.38,65,1.348,66,1.348,67,1.348,68,2.335,69,1.348,70,1.348,71,1.348,72,1.348,73,2.335,74,1.348,75,1.974,76,0.032,77,1.54,78,1.348,79,1.348,80,1.348,81,1.348,82,1.187,83,1.348,84,2.57,85,1.348,86,2.335,87,1.348,88,0.836,89,1.052,90,1.348,91,1.348,92,1.348,93,1.348,94,1.348,95,1.348,96,1.348,97,1.348,98,1.348,99,1.348,100,1.348,101,1.348,102,1.187,103,1.348,104,1.348,105,1.348,106,2.006,107,1.348,108,1.348,109,1.348,110,2.858,111,1.348,112,1.348,113,1.348,114,1.348,115,1.348,116,1.348,117,1.052,118,1.348,119,1.348,120,0.025,122,0.867,130,0.593,173,1.551,201,1.052,211,2.262,212,2.407,214,2.134,331,2.146,530,2.718,553,3.155,567,3.867,568,3.155,569,3.155,570,3.867,571,4.531,572,3.269,573,3.867,574,2.233,575,3.269,576,2.233,577,2.233,578,2.233,579,2.233,580,2.233,581,2.233,582,2.233,583,2.233,584,2.233,585,2.233,586,2.233,587,2.233,588,2.233]],["title/classes/Room.html",[0,0.204,196,0.874]],["body/classes/Room.html",[0,0.275,2,0.479,3,0.479,4,0.364,6,1.652,14,1.604,15,0.453,16,0.695,23,1.124,25,0.994,26,0.045,27,1.133,28,0.837,29,0.994,30,1.026,31,1.271,36,1.428,44,0.528,53,0.928,64,1.219,76,0.025,89,1.088,120,0.025,122,0.889,130,0.889,150,1.81,153,1.446,159,2.073,165,0.969,168,1.579,169,1.12,170,1.311,171,1.885,196,1.628,200,1.604,201,2.385,222,0.865,223,0.772,224,1.654,226,1.228,227,1.228,228,1.395,244,1.604,276,1.692,295,1.088,298,2.381,299,1.885,316,1.579,331,1.654,334,1.395,357,1.228,372,2.738,394,1.885,416,1.885,423,3.747,498,1.579,500,1.395,527,1.885,530,1.781,537,3.908,589,1.604,590,3.944,591,4.79,592,4.326,593,4.326,594,3.351,595,3.351,596,3.351,597,3.351,598,3.351,599,2.31,600,2.31,601,2.31,602,2.31,603,2.31,604,2.31,605,2.31,606,2.31,607,3.351,608,2.31,609,2.31,610,2.31,611,2.31,612,2.31,613,2.31,614,2.31,615,2.31,616,2.31,617,2.31,618,1.604,619,2.738,620,1.604,621,1.604,622,1.604,623,1.604,624,1.604,625,1.604,626,1.604,627,1.604,628,1.604,629,3.351,630,2.31]],["title/classes/TileLayer.html",[0,0.204,314,1.557]],["body/classes/TileLayer.html",[0,0.24,2,0.498,3,0.498,4,0.379,6,1.472,15,0.324,16,0.715,23,1.061,25,0.836,26,0.045,27,0.836,28,0.788,29,0.836,30,1.037,31,0.914,36,1.447,44,0.379,51,0.899,53,0.948,76,0.026,88,0.899,89,1.131,120,0.026,122,0.914,130,0.914,153,1.347,154,1.667,156,2.657,165,1.007,168,1.131,169,1.152,170,0.914,178,2.08,193,2.811,194,2.811,195,2.718,211,2.579,212,2.657,214,1.899,222,0.899,223,0.802,230,1.276,244,2.392,267,1.667,276,1.472,295,1.131,313,2.197,314,2.34,368,1.958,437,1.667,498,1.131,500,1.449,506,3.287,631,1.958,632,4.403,633,4.172,634,4.03,635,3.445,636,2.401,637,2.401,638,2.401,639,2.401,640,2.401,641,2.811,642,3.445,643,3.445,644,4.853,645,2.401,646,2.401,647,1.958,648,1.958,649,4.03,650,2.401,651,2.401,652,2.401,653,2.401,654,2.401,655,2.401,656,2.401,657,2.401,658,4.663,659,1.958,660,1.667,661,1.276,662,2.401,663,2.401,664,2.401,665,3.445,666,3.445,667,5.115,668,3.445,669,2.401,670,2.401,671,2.401,672,2.401,673,2.401,674,2.401,675,2.401,676,2.401,677,2.401,678,2.401,679,2.401,680,2.401,681,2.401,682,2.401]],["title/classes/TileMap.html",[0,0.204,313,1.381]],["body/classes/TileMap.html",[0,0.249,1,1.336,2,0.524,3,0.524,4,0.398,6,1.385,9,2.174,15,0.341,16,0.741,23,1.132,25,0.986,26,0.045,27,0.986,28,0.852,29,0.986,30,0.986,31,1.099,36,1.611,41,1.498,44,0.398,53,0.84,64,0.947,76,0.027,120,0.027,122,0.947,130,0.947,153,1.193,165,1.058,169,0.843,170,1.195,195,2.695,222,0.945,223,0.843,230,1.341,236,1.523,237,1.341,267,3.522,276,1.505,295,1.189,313,2.122,314,2.525,327,2.058,498,1.189,500,1.523,550,3.674,633,4.227,641,2.058,648,2.912,661,2.695,683,2.058,684,3.57,685,3.57,686,4.142,687,2.523,688,3.57,689,2.523,690,2.523,691,2.523,692,2.523,693,2.523,694,2.523,695,3.57,696,3.57,697,3.57,698,2.523,699,2.523,700,2.523,701,2.523,702,2.523,703,2.523,704,2.523,705,2.523,706,2.523,707,2.523,708,3.57,709,2.523,710,2.523,711,2.523,712,2.523,713,2.523,714,2.523,715,2.523,716,2.523,717,4.142,718,2.523,719,2.523,720,2.523,721,2.523,722,2.523,723,2.523,724,2.523,725,2.523,726,2.523]],["title/classes/TileSet.html",[0,0.204,661,1.557]],["body/classes/TileSet.html",[0,0.286,2,0.641,3,0.641,4,0.487,15,0.417,16,0.851,23,1.163,25,0.641,26,0.045,27,1.059,28,0.876,29,0.641,30,0.641,31,0.819,44,0.487,76,0.031,120,0.031,122,1.088,130,1.088,154,2.143,156,2.845,170,1.088,195,2.889,222,1.156,223,1.032,228,1.864,230,1.64,236,1.864,237,1.64,276,1.639,313,2.404,647,2.518,661,2.178,727,2.518,728,4.903,729,4.903,730,4.903,731,4,732,4.903,733,4.903,734,4.099,735,3.087,736,3.087,737,3.087,738,3.087,739,3.087,740,3.087,741,3.087,742,3.087,743,3.087,744,3.087,745,3.087,746,3.087,747,3.087,748,3.087,749,3.087,750,3.087,751,3.087,752,3.087,753,3.087,754,3.087,755,3.087,756,3.087,757,3.087,758,3.087,759,3.087]],["title/classes/Utils.html",[0,0.204,225,1.381]],["body/classes/Utils.html",[0,0.234,2,0.479,3,0.479,4,0.364,15,0.312,16,0.695,17,3.042,23,1.102,25,1.087,26,0.045,27,1.087,28,0.826,29,1.087,30,1.114,36,1.743,44,0.364,46,1.579,76,0.025,120,0.025,170,0.613,211,2.545,212,2.545,214,1.579,222,1.255,223,0.772,225,1.579,226,1.228,251,3.529,293,1.885,295,2.257,437,2.327,443,4.129,444,4.031,445,4.129,448,3.908,569,2.734,731,1.885,760,1.885,761,3.944,762,3.351,763,3.351,764,3.351,765,3.351,766,3.351,767,3.351,768,3.351,769,3.944,770,3.944,771,3.944,772,2.31,773,2.31,774,4.326,775,2.31,776,3.351,777,2.31,778,2.31,779,2.31,780,2.734,781,2.31,782,2.31,783,4.326,784,2.31,785,4.593,786,2.31,787,2.31,788,2.31,789,2.31,790,3.351,791,2.31,792,2.31,793,2.31,794,2.31,795,2.31,796,2.31,797,2.31,798,2.31,799,2.31,800,2.31,801,2.31,802,2.31,803,2.31,804,3.351,805,2.31,806,3.351,807,2.31,808,2.31,809,3.351,810,2.31,811,2.31]],["title/coverage.html",[812,3.23]],["body/coverage.html",[0,0.4,1,1.26,4,0.531,5,2.694,9,1.411,26,0.045,28,0.531,41,1.411,53,0.792,64,1.497,76,0.033,120,0.033,121,2.336,146,2.031,147,2.745,150,1.125,159,1.411,190,2.031,191,3.011,196,1.003,224,2.201,225,1.585,262,3.011,313,1.585,314,1.788,359,2.031,417,3.011,589,3.011,631,2.745,661,1.788,683,2.745,727,2.745,760,2.745,812,2.745,813,3.364,814,3.364,815,2.745,816,3.364,817,3.364,818,3.364,819,3.364,820,3.364,821,2.745,822,3.364,823,4.337,824,4.337,825,3.73,826,5.372,827,2.745,828,2.745,829,3.364,830,3.364,831,3.364,832,3.364,833,2.336,834,3.364,835,3.364,836,3.364,837,3.364,838,4.337,839,3.364,840,3.364]],["title/dependencies.html",[841,2.468,842,2.867]],["body/dependencies.html",[26,0.044,76,0.039,120,0.039,223,1.482,224,1.86,842,3.617,843,4.434,844,4.434,845,4.434,846,4.434,847,4.434,848,4.434]],["title/miscellaneous/enumerations.html",[849,1.49,850,2.867]],["body/miscellaneous/enumerations.html",[15,0.525,26,0.045,76,0.036,102,2.064,120,0.036,530,3.114,568,3.168,660,2.697,780,3.168,815,3.168,821,3.168,833,2.697,849,2.345,850,3.168,851,4.746,852,3.168,853,3.884,854,3.884,855,3.884,856,3.884,857,3.884,858,3.884,859,3.884,860,3.884,861,3.884,862,3.884,863,3.884,864,3.884,865,3.884,866,3.884,867,3.884,868,3.884,869,3.884,870,3.884,871,3.884,872,3.884,873,3.884]],["title/index.html",[11,1.163,15,0.334,874,2.013]],["body/index.html",[26,0.039,76,0.039,117,2.059,120,0.039,150,1.461,316,2.059,359,2.639,455,3.566,485,3.566,659,4.396,875,4.371,876,4.371,877,4.371,878,4.371,879,5.093,880,4.371,881,4.371,882,4.371]],["title/license.html",[11,1.163,874,2.013,883,2.013]],["body/license.html",[4,0.568,26,0.034,76,0.034,120,0.034,152,2.938,315,2.938,317,3.694,351,2.938,359,2.174,660,2.501,883,2.938,884,3.601,885,4.954,886,3.601,887,3.601,888,3.601,889,4.529,890,3.601,891,3.601,892,3.601,893,3.601,894,4.529,895,3.601,896,5.198,897,5.663,898,3.601,899,4.529,900,4.954,901,3.601,902,4.954,903,4.529,904,3.601,905,3.601,906,3.601,907,3.601,908,3.601,909,3.601,910,3.601,911,3.601,912,3.601,913,3.601,914,3.601,915,3.601,916,4.529,917,4.529,918,3.601,919,3.601,920,3.601,921,4.529,922,3.601,923,3.601,924,3.601,925,3.601,926,3.601,927,3.601,928,3.601,929,3.601,930,3.601,931,3.601,932,3.601,933,3.601,934,3.601,935,3.601,936,3.601,937,3.601,938,3.601,939,3.601,940,3.601,941,3.601,942,3.601,943,3.601]],["title/modules.html",[944,3.23]],["body/modules.html",[26,0.04,76,0.04,120,0.04,944,3.747]],["title/overview.html",[945,3.23]],["body/overview.html",[0,0.318,26,0.04,76,0.04,120,0.04,945,3.725,946,4.566]],["title/miscellaneous/variables.html",[825,2.44,849,1.49]],["body/miscellaneous/variables.html",[15,0.525,26,0.044,28,0.612,76,0.036,120,0.036,191,2.697,201,2.236,224,2.465,227,2.909,262,2.697,331,2.337,417,2.697,530,2.96,589,2.697,825,2.697,827,3.168,828,4.355,833,2.697,849,2.345,852,3.168,947,3.884,948,3.884,949,3.884,950,3.884,951,3.884,952,3.884]],["title/additional-documentation/rooms.html",[196,0.736,953,2.013,954,2.013]],["body/additional-documentation/rooms.html",[0,0.279,26,0.045,44,0.632,53,1.222,76,0.037,120,0.037,150,1.616,153,1.339,169,1.339,170,1.378,196,1.647,276,1.616,298,2.419,316,2.278,331,1.681,334,2.419,357,2.129,498,1.887,618,2.782,619,3.607,620,2.782,621,2.782,622,2.782,623,2.782,624,2.782,625,2.782,626,2.782,627,2.782,628,2.782]],["title/additional-documentation/rooms/rooms.html",[196,0.736,953,2.013,954,2.013]],["body/additional-documentation/rooms/rooms.html",[0,0.279,26,0.045,44,0.632,53,1.222,76,0.037,120,0.037,150,1.616,153,1.339,169,1.339,170,1.378,196,1.647,276,1.616,298,2.419,316,2.278,331,1.681,334,2.419,357,2.129,498,1.887,618,2.782,619,3.607,620,2.782,621,2.782,622,2.782,623,2.782,624,2.782,625,2.782,626,2.782,627,2.782,628,2.782]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"classes/Utils.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["0",{"_index":64,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileMap.html":{},"coverage.html":{}}}],["0.0.31",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":802,"title":{},"body":{"classes/Utils.html":{}}}],["0/1",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":817,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":820,"title":{},"body":{"coverage.html":{}}}],["00ffff",{"_index":322,"title":{},"body":{"classes/Game.html":{}}}],["0xffff00",{"_index":517,"title":{},"body":{"classes/GameObject.html":{}}}],["1",{"_index":106,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["1/11",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":816,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":177,"title":{},"body":{"classes/Camera.html":{}}}],["112",{"_index":865,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["13",{"_index":946,"title":{},"body":{"overview.html":{}}}],["14",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":815,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["180",{"_index":810,"title":{},"body":{"classes/Utils.html":{}}}],["2",{"_index":186,"title":{},"body":{"classes/Camera.html":{},"classes/GameObject.html":{}}}],["2.0.15",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["2/9",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":175,"title":{},"body":{"classes/Camera.html":{}}}],["2018",{"_index":886,"title":{},"body":{"license.html":{}}}],["22",{"_index":836,"title":{},"body":{"coverage.html":{}}}],["222;color",{"_index":321,"title":{},"body":{"classes/Game.html":{}}}],["27",{"_index":867,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["3/21",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":821,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["38",{"_index":869,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["39",{"_index":870,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["4.1.0",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["4.8.2",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":872,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["42",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["6/14",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":239,"title":{},"body":{"classes/CutScene.html":{}}}],["600",{"_index":334,"title":{},"body":{"classes/Game.html":{},"classes/Room.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["65",{"_index":861,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["68",{"_index":854,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["69",{"_index":859,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["7",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["7/23",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":857,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["80",{"_index":856,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["800",{"_index":332,"title":{},"body":{"classes/Game.html":{}}}],["83",{"_index":863,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["87",{"_index":860,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["9",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["abov",{"_index":915,"title":{},"body":{"license.html":{}}}],["action",{"_index":937,"title":{},"body":{"license.html":{}}}],["ad",{"_index":809,"title":{},"body":{"classes/Utils.html":{}}}],["add",{"_index":298,"title":{},"body":{"classes/Game.html":{},"classes/Room.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["addgao",{"_index":594,"title":{},"body":{"classes/Room.html":{}}}],["addgao(newobject",{"_index":603,"title":{},"body":{"classes/Room.html":{}}}],["addit",{"_index":953,"title":{"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}},"body":{}}],["addroom",{"_index":271,"title":{},"body":{"classes/Game.html":{}}}],["addroom(roomtoadd",{"_index":296,"title":{},"body":{"classes/Game.html":{}}}],["alarm",{"_index":418,"title":{},"body":{"classes/GameObject.html":{}}}],["alarmindex",{"_index":461,"title":{},"body":{"classes/GameObject.html":{}}}],["alarmnbtick",{"_index":467,"title":{},"body":{"classes/GameObject.html":{}}}],["and/or",{"_index":909,"title":{},"body":{"license.html":{}}}],["angl",{"_index":251,"title":{},"body":{"classes/CutScene.html":{},"classes/Utils.html":{}}}],["antialia",{"_index":335,"title":{},"body":{"classes/Game.html":{}}}],["app",{"_index":263,"title":{},"body":{"classes/Game.html":{}}}],["ar",{"_index":806,"title":{},"body":{"classes/Utils.html":{}}}],["area",{"_index":472,"title":{},"body":{"classes/GameObject.html":{}}}],["aris",{"_index":941,"title":{},"body":{"license.html":{}}}],["asset",{"_index":756,"title":{},"body":{"classes/TileSet.html":{}}}],["associ",{"_index":898,"title":{},"body":{"license.html":{}}}],["astar",{"_index":1,"title":{"classes/AStar.html":{}},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Game.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/TileMap.html":{},"coverage.html":{}}}],["astar.pathto(currentnod",{"_index":80,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["author",{"_index":930,"title":{},"body":{"license.html":{}}}],["automat",{"_index":356,"title":{},"body":{"classes/Game.html":{}}}],["avoid",{"_index":180,"title":{},"body":{"classes/Camera.html":{}}}],["ax",{"_index":808,"title":{},"body":{"classes/Utils.html":{}}}],["background",{"_index":320,"title":{},"body":{"classes/Game.html":{}}}],["bad",{"_index":182,"title":{},"body":{"classes/Camera.html":{}}}],["binaryheap",{"_index":121,"title":{"classes/BinaryHeap.html":{}},"body":{"classes/BinaryHeap.html":{},"coverage.html":{}}}],["binaryheap(funct",{"_index":54,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["boolean",{"_index":214,"title":{},"body":{"classes/CutScene.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/TileLayer.html":{},"classes/Utils.html":{}}}],["borderi",{"_index":149,"title":{},"body":{"classes/Camera.html":{}}}],["borderx",{"_index":148,"title":{},"body":{"classes/Camera.html":{}}}],["bubbleup",{"_index":125,"title":{},"body":{"classes/BinaryHeap.html":{}}}],["bubbleup(n",{"_index":134,"title":{},"body":{"classes/BinaryHeap.html":{}}}],["c",{"_index":315,"title":{},"body":{"classes/Game.html":{},"license.html":{}}}],["call",{"_index":527,"title":{},"body":{"classes/GameObject.html":{},"classes/Room.html":{}}}],["callback",{"_index":479,"title":{},"body":{"classes/GameObject.html":{}}}],["camera",{"_index":146,"title":{"classes/Camera.html":{}},"body":{"classes/Camera.html":{},"classes/Game.html":{},"coverage.html":{}}}],["camera(thi",{"_index":364,"title":{},"body":{"classes/Game.html":{}}}],["canva",{"_index":355,"title":{},"body":{"classes/Game.html":{}}}],["case",{"_index":75,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["chang",{"_index":237,"title":{},"body":{"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{}}}],["charg",{"_index":893,"title":{},"body":{"license.html":{}}}],["check",{"_index":455,"title":{},"body":{"classes/GameObject.html":{},"index.html":{}}}],["checkroomtransit",{"_index":272,"title":{},"body":{"classes/Game.html":{}}}],["chosentileset",{"_index":662,"title":{},"body":{"classes/TileLayer.html":{}}}],["chosentileset.firstgid",{"_index":664,"title":{},"body":{"classes/TileLayer.html":{}}}],["chosentileset.imagewidth",{"_index":666,"title":{},"body":{"classes/TileLayer.html":{}}}],["chosentileset.textur",{"_index":671,"title":{},"body":{"classes/TileLayer.html":{}}}],["chosentileset.tilewidth",{"_index":667,"title":{},"body":{"classes/TileLayer.html":{}}}],["claim",{"_index":933,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"classes/Utils.html":{}},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"classes/Utils.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["classnam",{"_index":456,"title":{},"body":{"classes/GameObject.html":{}}}],["classnametocheck",{"_index":446,"title":{},"body":{"classes/GameObject.html":{}}}],["cleandirti",{"_index":551,"title":{},"body":{"classes/Graph.html":{}}}],["cleannod",{"_index":18,"title":{},"body":{"classes/AStar.html":{}}}],["cleannode(nod",{"_index":22,"title":{},"body":{"classes/AStar.html":{}}}],["close",{"_index":84,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["closest",{"_index":49,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["closestnod",{"_index":56,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["code",{"_index":489,"title":{},"body":{"classes/GameObject.html":{}}}],["col",{"_index":723,"title":{},"body":{"classes/TileMap.html":{}}}],["collisionrectangl",{"_index":422,"title":{},"body":{"classes/GameObject.html":{}}}],["collisionrectangle(x1",{"_index":442,"title":{},"body":{"classes/GameObject.html":{}}}],["color",{"_index":325,"title":{},"body":{"classes/Game.html":{}}}],["comput",{"_index":109,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["condit",{"_index":914,"title":{},"body":{"license.html":{}}}],["connect",{"_index":943,"title":{},"body":{"license.html":{}}}],["console.log('roommenu",{"_index":620,"title":{},"body":{"classes/Room.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["const",{"_index":226,"title":{},"body":{"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Room.html":{},"classes/Utils.html":{}}}],["constructor",{"_index":130,"title":{},"body":{"classes/BinaryHeap.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{}}}],["constructor(gridin",{"_index":554,"title":{},"body":{"classes/Graph.html":{}}}],["constructor(jsonobject",{"_index":687,"title":{},"body":{"classes/TileMap.html":{}}}],["constructor(mypar",{"_index":154,"title":{},"body":{"classes/Camera.html":{},"classes/TileLayer.html":{},"classes/TileSet.html":{}}}],["constructor(nam",{"_index":200,"title":{},"body":{"classes/CutScene.html":{},"classes/GameObject.html":{},"classes/Room.html":{}}}],["constructor(newwidth",{"_index":279,"title":{},"body":{"classes/Game.html":{}}}],["constructor(scorefunct",{"_index":131,"title":{},"body":{"classes/BinaryHeap.html":{}}}],["constructor(x",{"_index":574,"title":{},"body":{"classes/GridNode.html":{}}}],["content",{"_index":123,"title":{},"body":{"classes/BinaryHeap.html":{}}}],["contract",{"_index":938,"title":{},"body":{"license.html":{}}}],["coordin",{"_index":644,"title":{},"body":{"classes/TileLayer.html":{}}}],["copi",{"_index":896,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":885,"title":{},"body":{"license.html":{}}}],["coverag",{"_index":812,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":357,"title":{},"body":{"classes/Game.html":{},"classes/GameObject.html":{},"classes/Room.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["current",{"_index":90,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["currentnod",{"_index":73,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["currentnode.clos",{"_index":87,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["currentroom",{"_index":412,"title":{},"body":{"classes/Game.html":{}}}],["currentroom.roomheight",{"_index":415,"title":{},"body":{"classes/Game.html":{}}}],["currentroom.roomwidth",{"_index":414,"title":{},"body":{"classes/Game.html":{}}}],["currentroomkey",{"_index":264,"title":{},"body":{"classes/Game.html":{}}}],["currentscen",{"_index":192,"title":{},"body":{"classes/CutScene.html":{}}}],["cutscen",{"_index":190,"title":{"classes/CutScene.html":{}},"body":{"classes/CutScene.html":{},"classes/Game.html":{},"coverage.html":{}}}],["d",{"_index":853,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["damag",{"_index":934,"title":{},"body":{"license.html":{}}}],["data",{"_index":642,"title":{},"body":{"classes/TileLayer.html":{}}}],["day",{"_index":378,"title":{},"body":{"classes/Game.html":{}}}],["deal",{"_index":899,"title":{},"body":{"license.html":{}}}],["debug",{"_index":224,"title":{},"body":{"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Room.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["debug('%c",{"_index":323,"title":{},"body":{"classes/Game.html":{}}}],["debug('addchild",{"_index":721,"title":{},"body":{"classes/TileMap.html":{}}}],["debug('distancetotarget",{"_index":250,"title":{},"body":{"classes/CutScene.html":{}}}],["debug('endact",{"_index":258,"title":{},"body":{"classes/CutScene.html":{}}}],["debug('gener",{"_index":535,"title":{},"body":{"classes/GameObject.html":{}}}],["debug('mov",{"_index":241,"title":{},"body":{"classes/CutScene.html":{}}}],["debug('ohy",{"_index":227,"title":{},"body":{"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Room.html":{},"miscellaneous/variables.html":{}}}],["debug('onloadeddon",{"_index":380,"title":{},"body":{"classes/Game.html":{}}}],["debug('onroomend",{"_index":546,"title":{},"body":{"classes/GameObject.html":{}}}],["debug('onroomstart",{"_index":545,"title":{},"body":{"classes/GameObject.html":{}}}],["debug('renderlay",{"_index":716,"title":{},"body":{"classes/TileMap.html":{}}}],["debug('start",{"_index":383,"title":{},"body":{"classes/Game.html":{}}}],["debug('thi",{"_index":651,"title":{},"body":{"classes/TileLayer.html":{}}}],["debug('tileset",{"_index":710,"title":{},"body":{"classes/TileMap.html":{}}}],["debug('wait",{"_index":235,"title":{},"body":{"classes/CutScene.html":{}}}],["debug(angl",{"_index":253,"title":{},"body":{"classes/CutScene.html":{}}}],["debug(objectnam",{"_index":245,"title":{},"body":{"classes/CutScene.html":{}}}],["default",{"_index":331,"title":{},"body":{"classes/Game.html":{},"classes/GameObject.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"miscellaneous/variables.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["defin",{"_index":23,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"classes/Utils.html":{}}}],["delet",{"_index":533,"title":{},"body":{"classes/GameObject.html":{}}}],["delta",{"_index":169,"title":{},"body":{"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["deltax",{"_index":804,"title":{},"body":{"classes/Utils.html":{}}}],["deltay",{"_index":805,"title":{},"body":{"classes/Utils.html":{}}}],["demo",{"_index":879,"title":{},"body":{"index.html":{}}}],["depend",{"_index":842,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["descript",{"_index":6,"title":{},"body":{"classes/AStar.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{}}}],["desti",{"_index":194,"title":{},"body":{"classes/CutScene.html":{},"classes/TileLayer.html":{}}}],["destroy",{"_index":423,"title":{},"body":{"classes/GameObject.html":{},"classes/Room.html":{}}}],["destx",{"_index":193,"title":{},"body":{"classes/CutScene.html":{},"classes/TileLayer.html":{}}}],["diagon",{"_index":19,"title":{},"body":{"classes/AStar.html":{},"classes/Graph.html":{}}}],["diagonal(pos0",{"_index":32,"title":{},"body":{"classes/AStar.html":{}}}],["directli",{"_index":344,"title":{},"body":{"classes/Game.html":{}}}],["dirtynod",{"_index":549,"title":{},"body":{"classes/Graph.html":{}}}],["dispatch",{"_index":349,"title":{},"body":{"classes/Game.html":{}}}],["distancetotarget",{"_index":248,"title":{},"body":{"classes/CutScene.html":{}}}],["distribut",{"_index":907,"title":{},"body":{"license.html":{}}}],["document",{"_index":359,"title":{},"body":{"classes/Game.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["document.body.appendchild(this.app.view",{"_index":360,"title":{},"body":{"classes/Game.html":{}}}],["dominiqu",{"_index":887,"title":{},"body":{"license.html":{}}}],["done",{"_index":374,"title":{},"body":{"classes/Game.html":{}}}],["down",{"_index":871,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["du",{"_index":722,"title":{},"body":{"classes/TileMap.html":{}}}],["dumont",{"_index":888,"title":{},"body":{"license.html":{}}}],["e",{"_index":858,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["each",{"_index":85,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["easi",{"_index":482,"title":{},"body":{"classes/GameObject.html":{}}}],["element",{"_index":117,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Game.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"index.html":{}}}],["element'",{"_index":111,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["empti",{"_index":484,"title":{},"body":{"classes/GameObject.html":{}}}],["end",{"_index":12,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["endact",{"_index":198,"title":{},"body":{"classes/CutScene.html":{}}}],["engin",{"_index":876,"title":{},"body":{"index.html":{}}}],["enjoy",{"_index":494,"title":{},"body":{"classes/GameObject.html":{}}}],["enumer",{"_index":850,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["escap",{"_index":866,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ev",{"_index":340,"title":{},"body":{"classes/Game.html":{}}}],["ev.clienti",{"_index":342,"title":{},"body":{"classes/Game.html":{}}}],["eval('thi",{"_index":260,"title":{},"body":{"classes/CutScene.html":{}}}],["event",{"_index":351,"title":{},"body":{"classes/Game.html":{},"license.html":{}}}],["exampl",{"_index":14,"title":{},"body":{"classes/AStar.html":{},"classes/Graph.html":{},"classes/Room.html":{}}}],["export",{"_index":44,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"classes/Utils.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["express",{"_index":923,"title":{},"body":{"license.html":{}}}],["extend",{"_index":498,"title":{},"body":{"classes/GameObject.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["f",{"_index":567,"title":{},"body":{"classes/GridNode.html":{}}}],["f(x",{"_index":67,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["f1",{"_index":864,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fals",{"_index":51,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/TileLayer.html":{}}}],["fetch",{"_index":112,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["ff0000",{"_index":326,"title":{},"body":{"classes/Game.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"classes/Utils.html":{},"coverage.html":{},"license.html":{}}}],["fill",{"_index":101,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["find",{"_index":89,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileLayer.html":{}}}],["findpath",{"_index":684,"title":{},"body":{"classes/TileMap.html":{}}}],["findpath(fromx",{"_index":694,"title":{},"body":{"classes/TileMap.html":{}}}],["findtilesetforgid",{"_index":685,"title":{},"body":{"classes/TileMap.html":{}}}],["findtilesetforgid(gid",{"_index":700,"title":{},"body":{"classes/TileMap.html":{}}}],["firstgid",{"_index":728,"title":{},"body":{"classes/TileSet.html":{}}}],["fit",{"_index":926,"title":{},"body":{"license.html":{}}}],["follow",{"_index":152,"title":{},"body":{"classes/Camera.html":{},"license.html":{}}}],["follow(gameobject",{"_index":161,"title":{},"body":{"classes/Camera.html":{}}}],["foreach",{"_index":526,"title":{},"body":{"classes/GameObject.html":{}}}],["found",{"_index":77,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["found.emit('scrol",{"_index":352,"title":{},"body":{"classes/Game.html":{}}}],["free",{"_index":892,"title":{},"body":{"license.html":{}}}],["fromi",{"_index":695,"title":{},"body":{"classes/TileMap.html":{}}}],["fromneighbor",{"_index":586,"title":{},"body":{"classes/GridNode.html":{}}}],["fromx",{"_index":699,"title":{},"body":{"classes/TileMap.html":{}}}],["function",{"_index":372,"title":{},"body":{"classes/Game.html":{},"classes/GameObject.html":{},"classes/Room.html":{}}}],["furnish",{"_index":912,"title":{},"body":{"license.html":{}}}],["g",{"_index":568,"title":{},"body":{"classes/GridNode.html":{},"miscellaneous/enumerations.html":{}}}],["game",{"_index":150,"title":{"classes/Game.html":{}},"body":{"classes/Camera.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Room.html":{},"coverage.html":{},"index.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["game(800",{"_index":625,"title":{},"body":{"classes/Room.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["gameobject",{"_index":159,"title":{"classes/GameObject.html":{}},"body":{"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Room.html":{},"coverage.html":{}}}],["gao",{"_index":537,"title":{},"body":{"classes/GameObject.html":{},"classes/Room.html":{}}}],["gaotofollow",{"_index":151,"title":{},"body":{"classes/Camera.html":{}}}],["get",{"_index":874,"title":{"index.html":{},"license.html":{}},"body":{}}],["getcost",{"_index":572,"title":{},"body":{"classes/GridNode.html":{}}}],["getcost(fromneighbor",{"_index":584,"title":{},"body":{"classes/GridNode.html":{}}}],["getcurrentroom",{"_index":273,"title":{},"body":{"classes/Game.html":{}}}],["getcurrentroomheight",{"_index":274,"title":{},"body":{"classes/Game.html":{}}}],["getcurrentroomwidth",{"_index":275,"title":{},"body":{"classes/Game.html":{}}}],["getdata",{"_index":634,"title":{},"body":{"classes/TileLayer.html":{}}}],["getdata(x",{"_index":639,"title":{},"body":{"classes/TileLayer.html":{}}}],["getgaobynam",{"_index":595,"title":{},"body":{"classes/Room.html":{}}}],["getgaobyname(nametoget",{"_index":608,"title":{},"body":{"classes/Room.html":{}}}],["getrandombool",{"_index":761,"title":{},"body":{"classes/Utils.html":{}}}],["getrandomfloat",{"_index":762,"title":{},"body":{"classes/Utils.html":{}}}],["getrandomfloat(min",{"_index":773,"title":{},"body":{"classes/Utils.html":{}}}],["getrandomint",{"_index":763,"title":{},"body":{"classes/Utils.html":{}}}],["getrandomint(min",{"_index":777,"title":{},"body":{"classes/Utils.html":{}}}],["gettexturepart",{"_index":764,"title":{},"body":{"classes/Utils.html":{}}}],["gettexturepart(textur",{"_index":779,"title":{},"body":{"classes/Utils.html":{}}}],["gid",{"_index":702,"title":{},"body":{"classes/TileMap.html":{}}}],["github",{"_index":881,"title":{},"body":{"index.html":{}}}],["give",{"_index":490,"title":{},"body":{"classes/GameObject.html":{}}}],["given",{"_index":10,"title":{},"body":{"classes/AStar.html":{}}}],["glitch",{"_index":181,"title":{},"body":{"classes/Camera.html":{}}}],["global",{"_index":343,"title":{},"body":{"classes/Game.html":{}}}],["goto",{"_index":310,"title":{},"body":{"classes/Game.html":{}}}],["grab",{"_index":65,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["grant",{"_index":891,"title":{},"body":{"license.html":{}}}],["graph",{"_index":9,"title":{"classes/Graph.html":{}},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/TileMap.html":{},"coverage.html":{}}}],["graph.cleandirti",{"_index":45,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["graph.markdirty(start",{"_index":61,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["graph.neighbors(currentnod",{"_index":91,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["graphicshitarea",{"_index":419,"title":{},"body":{"classes/GameObject.html":{}}}],["greater",{"_index":118,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["grid",{"_index":550,"title":{},"body":{"classes/Graph.html":{},"classes/TileMap.html":{}}}],["gridin",{"_index":556,"title":{},"body":{"classes/Graph.html":{}}}],["gridnod",{"_index":41,"title":{"classes/GridNode.html":{}},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/TileMap.html":{},"coverage.html":{}}}],["group",{"_index":265,"title":{},"body":{"classes/Game.html":{}}}],["h",{"_index":569,"title":{},"body":{"classes/GridNode.html":{},"classes/Utils.html":{}}}],["hard",{"_index":486,"title":{},"body":{"classes/GameObject.html":{}}}],["heap",{"_index":70,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["height",{"_index":333,"title":{},"body":{"classes/Game.html":{}}}],["hello",{"_index":828,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["here",{"_index":659,"title":{},"body":{"classes/TileLayer.html":{},"index.html":{}}}],["herebi",{"_index":890,"title":{},"body":{"license.html":{}}}],["heurist",{"_index":47,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["heuristic(start",{"_index":60,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["hit",{"_index":471,"title":{},"body":{"classes/GameObject.html":{}}}],["hitarea",{"_index":420,"title":{},"body":{"classes/GameObject.html":{}}}],["hitbox1.height",{"_index":544,"title":{},"body":{"classes/GameObject.html":{}}}],["hitbox1.i",{"_index":542,"title":{},"body":{"classes/GameObject.html":{}}}],["hitbox1.width",{"_index":541,"title":{},"body":{"classes/GameObject.html":{}}}],["hitbox1.x",{"_index":540,"title":{},"body":{"classes/GameObject.html":{}}}],["hittesthardcodedrectangl",{"_index":765,"title":{},"body":{"classes/Utils.html":{}}}],["hittesthardcodedrectangle(r1",{"_index":782,"title":{},"body":{"classes/Utils.html":{}}}],["hittestrectangl",{"_index":766,"title":{},"body":{"classes/Utils.html":{}}}],["hittestrectangle(r1",{"_index":786,"title":{},"body":{"classes/Utils.html":{}}}],["holder",{"_index":931,"title":{},"body":{"license.html":{}}}],["hole",{"_index":103,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["howler",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["html",{"_index":358,"title":{},"body":{"classes/Game.html":{}}}],["identifi",{"_index":813,"title":{},"body":{"coverage.html":{}}}],["il",{"_index":92,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["imag",{"_index":369,"title":{},"body":{"classes/Game.html":{}}}],["imageheight",{"_index":729,"title":{},"body":{"classes/TileSet.html":{}}}],["imagewidth",{"_index":730,"title":{},"body":{"classes/TileSet.html":{}}}],["imgi",{"_index":668,"title":{},"body":{"classes/TileLayer.html":{}}}],["imgx",{"_index":665,"title":{},"body":{"classes/TileLayer.html":{}}}],["impli",{"_index":924,"title":{},"body":{"license.html":{}}}],["import",{"_index":170,"title":{},"body":{"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"classes/Utils.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["impress",{"_index":491,"title":{},"body":{"classes/GameObject.html":{}}}],["includ",{"_index":902,"title":{},"body":{"license.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"classes/Utils.html":{}}}],["init",{"_index":276,"title":{},"body":{"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["initgridfromlay",{"_index":686,"title":{},"body":{"classes/TileMap.html":{}}}],["initgridfromlayer(lay",{"_index":704,"title":{},"body":{"classes/TileMap.html":{}}}],["input",{"_index":266,"title":{},"body":{"classes/Game.html":{}}}],["instanc",{"_index":453,"title":{},"body":{"classes/GameObject.html":{}}}],["instanceplac",{"_index":424,"title":{},"body":{"classes/GameObject.html":{}}}],["instanceplace(x",{"_index":451,"title":{},"body":{"classes/GameObject.html":{}}}],["isobjectlay",{"_index":632,"title":{},"body":{"classes/TileLayer.html":{}}}],["iswal",{"_index":573,"title":{},"body":{"classes/GridNode.html":{}}}],["it'",{"_index":373,"title":{},"body":{"classes/Game.html":{}}}],["itema.i",{"_index":681,"title":{},"body":{"classes/TileLayer.html":{}}}],["itemb",{"_index":680,"title":{},"body":{"classes/TileLayer.html":{}}}],["itemb.i",{"_index":682,"title":{},"body":{"classes/TileLayer.html":{}}}],["itself",{"_index":301,"title":{},"body":{"classes/Game.html":{},"classes/GameObject.html":{}}}],["jsonobject",{"_index":195,"title":{},"body":{"classes/CutScene.html":{},"classes/GameObject.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{}}}],["keep",{"_index":71,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["key",{"_index":387,"title":{},"body":{"classes/Game.html":{}}}],["keycod",{"_index":851,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kind",{"_index":922,"title":{},"body":{"license.html":{}}}],["layer",{"_index":267,"title":{},"body":{"classes/Game.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{}}}],["layer.nam",{"_index":717,"title":{},"body":{"classes/TileMap.html":{}}}],["ldiri",{"_index":256,"title":{},"body":{"classes/CutScene.html":{}}}],["ldirx",{"_index":254,"title":{},"body":{"classes/CutScene.html":{}}}],["left",{"_index":868,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["left_shift",{"_index":873,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["length",{"_index":790,"title":{},"body":{"classes/Utils.html":{}}}],["lengthdiri",{"_index":768,"title":{},"body":{"classes/Utils.html":{}}}],["lengthdirx",{"_index":767,"title":{},"body":{"classes/Utils.html":{}}}],["lengthdirx(length",{"_index":788,"title":{},"body":{"classes/Utils.html":{}}}],["lengthdiry(length",{"_index":791,"title":{},"body":{"classes/Utils.html":{}}}],["let'",{"_index":493,"title":{},"body":{"classes/GameObject.html":{}}}],["liabil",{"_index":935,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":932,"title":{},"body":{"license.html":{}}}],["licens",{"_index":883,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":903,"title":{},"body":{"license.html":{}}}],["list",{"_index":299,"title":{},"body":{"classes/Game.html":{},"classes/Room.html":{}}}],["load",{"_index":368,"title":{},"body":{"classes/Game.html":{},"classes/TileLayer.html":{}}}],["loadcallback",{"_index":633,"title":{},"body":{"classes/TileLayer.html":{},"classes/TileMap.html":{}}}],["loop",{"_index":384,"title":{},"body":{"classes/Game.html":{}}}],["lowest",{"_index":66,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["make",{"_index":492,"title":{},"body":{"classes/GameObject.html":{}}}],["manhattan",{"_index":20,"title":{},"body":{"classes/AStar.html":{}}}],["manhattan(pos0",{"_index":37,"title":{},"body":{"classes/AStar.html":{}}}],["map",{"_index":293,"title":{},"body":{"classes/Game.html":{},"classes/Utils.html":{}}}],["markdirti",{"_index":552,"title":{},"body":{"classes/Graph.html":{}}}],["markdirty(nod",{"_index":562,"title":{},"body":{"classes/Graph.html":{}}}],["match",{"_index":120,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"classes/Utils.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["math.atan2(deltay",{"_index":807,"title":{},"body":{"classes/Utils.html":{}}}],["math.hypot(x2",{"_index":803,"title":{},"body":{"classes/Utils.html":{}}}],["math.pi",{"_index":811,"title":{},"body":{"classes/Utils.html":{}}}],["max",{"_index":774,"title":{},"body":{"classes/Utils.html":{}}}],["mayb",{"_index":376,"title":{},"body":{"classes/Game.html":{}}}],["memori",{"_index":547,"title":{},"body":{"classes/Graph.html":{}}}],["merchant",{"_index":925,"title":{},"body":{"license.html":{}}}],["merg",{"_index":905,"title":{},"body":{"license.html":{}}}],["message.settext(math.round(app.ticker.fp",{"_index":403,"title":{},"body":{"classes/Game.html":{}}}],["method",{"_index":16,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"classes/Utils.html":{}}}],["min",{"_index":776,"title":{},"body":{"classes/Utils.html":{}}}],["minimalist",{"_index":875,"title":{},"body":{"index.html":{}}}],["miscellan",{"_index":849,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":884,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":904,"title":{},"body":{"license.html":{}}}],["modul",{"_index":944,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["moment",{"_index":495,"title":{},"body":{"classes/GameObject.html":{}}}],["mous",{"_index":346,"title":{},"body":{"classes/Game.html":{}}}],["mouseposit",{"_index":268,"title":{},"body":{"classes/Game.html":{}}}],["move",{"_index":82,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/CutScene.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["move(objectnam",{"_index":210,"title":{},"body":{"classes/CutScene.html":{}}}],["mygam",{"_index":624,"title":{},"body":{"classes/Room.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["mygame.addroom('menuroom",{"_index":626,"title":{},"body":{"classes/Room.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["mygame.init",{"_index":627,"title":{},"body":{"classes/Room.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["mygame.roomgoto('mainroom",{"_index":628,"title":{},"body":{"classes/Room.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["mynewobject",{"_index":497,"title":{},"body":{"classes/GameObject.html":{}}}],["myobject[propertynam",{"_index":531,"title":{},"body":{"classes/GameObject.html":{}}}],["mypar",{"_index":156,"title":{},"body":{"classes/Camera.html":{},"classes/CutScene.html":{},"classes/GameObject.html":{},"classes/TileLayer.html":{},"classes/TileSet.html":{}}}],["n",{"_index":114,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["name",{"_index":27,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"classes/Utils.html":{}}}],["nametoget",{"_index":610,"title":{},"body":{"classes/Room.html":{}}}],["nbsecond",{"_index":221,"title":{},"body":{"classes/CutScene.html":{}}}],["neighbor",{"_index":86,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["neighbors(nod",{"_index":564,"title":{},"body":{"classes/Graph.html":{}}}],["neighbors.length",{"_index":93,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["new",{"_index":53,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"coverage.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["newgam",{"_index":614,"title":{},"body":{"classes/Room.html":{}}}],["newheight",{"_index":280,"title":{},"body":{"classes/Game.html":{}}}],["newobject",{"_index":605,"title":{},"body":{"classes/Room.html":{}}}],["newrectangl",{"_index":474,"title":{},"body":{"classes/GameObject.html":{}}}],["newroom",{"_index":394,"title":{},"body":{"classes/Game.html":{},"classes/Room.html":{}}}],["newroom.init",{"_index":398,"title":{},"body":{"classes/Game.html":{}}}],["newroom.vis",{"_index":402,"title":{},"body":{"classes/Game.html":{}}}],["newwidth",{"_index":282,"title":{},"body":{"classes/Game.html":{}}}],["next",{"_index":69,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["nextroomkey",{"_index":269,"title":{},"body":{"classes/Game.html":{}}}],["node",{"_index":13,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["node.f",{"_index":55,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["noninfring",{"_index":929,"title":{},"body":{"license.html":{}}}],["normal",{"_index":81,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["notic",{"_index":916,"title":{},"body":{"license.html":{}}}],["null",{"_index":173,"title":{},"body":{"classes/Camera.html":{},"classes/GameObject.html":{},"classes/GridNode.html":{}}}],["number",{"_index":36,"title":{},"body":{"classes/AStar.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/Utils.html":{}}}],["object",{"_index":168,"title":{},"body":{"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Room.html":{},"classes/TileLayer.html":{}}}],["objectnam",{"_index":217,"title":{},"body":{"classes/CutScene.html":{}}}],["obtain",{"_index":895,"title":{},"body":{"license.html":{}}}],["offsetposit",{"_index":425,"title":{},"body":{"classes/GameObject.html":{}}}],["offsetposition(x",{"_index":457,"title":{},"body":{"classes/GameObject.html":{}}}],["oldroom",{"_index":392,"title":{},"body":{"classes/Game.html":{}}}],["oldroom.destroy",{"_index":397,"title":{},"body":{"classes/Game.html":{}}}],["oldroom.transferpersistentobjectsto(newroom",{"_index":396,"title":{},"body":{"classes/Game.html":{}}}],["on",{"_index":377,"title":{},"body":{"classes/Game.html":{}}}],["onalarm",{"_index":426,"title":{},"body":{"classes/GameObject.html":{}}}],["onalarm(alarmindex",{"_index":459,"title":{},"body":{"classes/GameObject.html":{}}}],["onlin",{"_index":882,"title":{},"body":{"index.html":{}}}],["onloadeddon",{"_index":277,"title":{},"body":{"classes/Game.html":{}}}],["onroomend",{"_index":427,"title":{},"body":{"classes/GameObject.html":{}}}],["onroomstart",{"_index":428,"title":{},"body":{"classes/GameObject.html":{}}}],["open",{"_index":83,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["openheap",{"_index":52,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["openheap.pop",{"_index":74,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["openheap.push(start",{"_index":62,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["openheap.s",{"_index":63,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["option",{"_index":29,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"classes/Utils.html":{}}}],["options.closest",{"_index":50,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["otherwis",{"_index":940,"title":{},"body":{"license.html":{}}}],["out",{"_index":942,"title":{},"body":{"license.html":{}}}],["overview",{"_index":945,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":855,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["packag",{"_index":841,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":954,"title":{"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}},"body":{}}],["param",{"_index":178,"title":{},"body":{"classes/Camera.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/TileLayer.html":{}}}],["paramet",{"_index":25,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"classes/Utils.html":{}}}],["parent",{"_index":110,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["parentn",{"_index":113,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["part",{"_index":487,"title":{},"body":{"classes/GameObject.html":{}}}],["particular",{"_index":927,"title":{},"body":{"license.html":{}}}],["path",{"_index":79,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["pathto",{"_index":21,"title":{},"body":{"classes/AStar.html":{}}}],["pathto(nod",{"_index":39,"title":{},"body":{"classes/AStar.html":{}}}],["perform",{"_index":7,"title":{},"body":{"classes/AStar.html":{}}}],["permiss",{"_index":889,"title":{},"body":{"license.html":{}}}],["permit",{"_index":911,"title":{},"body":{"license.html":{}}}],["persist",{"_index":421,"title":{},"body":{"classes/GameObject.html":{}}}],["person",{"_index":894,"title":{},"body":{"license.html":{}}}],["pixi",{"_index":222,"title":{},"body":{"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"classes/Utils.html":{}}}],["pixi.appl",{"_index":283,"title":{},"body":{"classes/Game.html":{}}}],["pixi.contain",{"_index":295,"title":{},"body":{"classes/Game.html":{},"classes/GameObject.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/Utils.html":{}}}],["pixi.graph",{"_index":435,"title":{},"body":{"classes/GameObject.html":{}}}],["pixi.j",{"_index":223,"title":{},"body":{"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"classes/Utils.html":{},"dependencies.html":{}}}],["pixi.loader.load(this.onloadeddon",{"_index":375,"title":{},"body":{"classes/Game.html":{}}}],["pixi.loader.resources[temptexturename].textur",{"_index":759,"title":{},"body":{"classes/TileSet.html":{}}}],["pixi.point",{"_index":290,"title":{},"body":{"classes/Game.html":{}}}],["pixi.rectangl",{"_index":437,"title":{},"body":{"classes/GameObject.html":{},"classes/TileLayer.html":{},"classes/Utils.html":{}}}],["pixi.scale_modes.nearest",{"_index":354,"title":{},"body":{"classes/Game.html":{}}}],["pixi.settings.scale_mod",{"_index":353,"title":{},"body":{"classes/Game.html":{}}}],["pixi.sprite(temptextur",{"_index":673,"title":{},"body":{"classes/TileLayer.html":{}}}],["pixi.textur",{"_index":670,"title":{},"body":{"classes/TileLayer.html":{}}}],["pixi.vers",{"_index":319,"title":{},"body":{"classes/Game.html":{}}}],["placemeet",{"_index":429,"title":{},"body":{"classes/GameObject.html":{}}}],["placemeeting(x",{"_index":464,"title":{},"body":{"classes/GameObject.html":{}}}],["pleas",{"_index":878,"title":{},"body":{"index.html":{}}}],["pointdirect",{"_index":769,"title":{},"body":{"classes/Utils.html":{}}}],["pointdirection(x1",{"_index":793,"title":{},"body":{"classes/Utils.html":{}}}],["pointdist",{"_index":770,"title":{},"body":{"classes/Utils.html":{}}}],["pointdistance(x1",{"_index":795,"title":{},"body":{"classes/Utils.html":{}}}],["pointinrectangl",{"_index":771,"title":{},"body":{"classes/Utils.html":{}}}],["pointinrectangle(x",{"_index":797,"title":{},"body":{"classes/Utils.html":{}}}],["pop",{"_index":99,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["portion",{"_index":919,"title":{},"body":{"license.html":{}}}],["pos0",{"_index":35,"title":{},"body":{"classes/AStar.html":{}}}],["pos1",{"_index":33,"title":{},"body":{"classes/AStar.html":{}}}],["posit",{"_index":167,"title":{},"body":{"classes/Camera.html":{},"classes/Game.html":{},"classes/GameObject.html":{}}}],["privat",{"_index":590,"title":{},"body":{"classes/Room.html":{}}}],["process",{"_index":68,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["project",{"_index":880,"title":{},"body":{"index.html":{}}}],["properti",{"_index":122,"title":{},"body":{"classes/BinaryHeap.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{}}}],["propertynam",{"_index":528,"title":{},"body":{"classes/GameObject.html":{}}}],["provid",{"_index":920,"title":{},"body":{"license.html":{}}}],["public",{"_index":591,"title":{},"body":{"classes/Room.html":{}}}],["publish",{"_index":906,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":928,"title":{},"body":{"license.html":{}}}],["push",{"_index":126,"title":{},"body":{"classes/BinaryHeap.html":{}}}],["push(el",{"_index":137,"title":{},"body":{"classes/BinaryHeap.html":{}}}],["r1",{"_index":785,"title":{},"body":{"classes/Utils.html":{}}}],["r1.i",{"_index":801,"title":{},"body":{"classes/Utils.html":{}}}],["r1.x",{"_index":800,"title":{},"body":{"classes/Utils.html":{}}}],["r2",{"_index":783,"title":{},"body":{"classes/Utils.html":{}}}],["readm",{"_index":416,"title":{},"body":{"classes/GameObject.html":{},"classes/Room.html":{}}}],["rectangl",{"_index":473,"title":{},"body":{"classes/GameObject.html":{}}}],["rel",{"_index":213,"title":{},"body":{"classes/CutScene.html":{}}}],["remov",{"_index":96,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["remove(nod",{"_index":139,"title":{},"body":{"classes/BinaryHeap.html":{}}}],["repeat",{"_index":100,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["requir",{"_index":58,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["require('debug')('ohy",{"_index":499,"title":{},"body":{"classes/GameObject.html":{}}}],["require('pixi.j",{"_index":799,"title":{},"body":{"classes/Utils.html":{}}}],["rescoreel",{"_index":127,"title":{},"body":{"classes/BinaryHeap.html":{}}}],["rescoreelement(nod",{"_index":141,"title":{},"body":{"classes/BinaryHeap.html":{}}}],["resolut",{"_index":337,"title":{},"body":{"classes/Game.html":{}}}],["restrict",{"_index":901,"title":{},"body":{"license.html":{}}}],["result",{"_index":76,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"classes/Utils.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["return",{"_index":30,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"classes/Utils.html":{}}}],["right",{"_index":660,"title":{},"body":{"classes/TileLayer.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["room",{"_index":196,"title":{"classes/Room.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}},"body":{"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Room.html":{},"coverage.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["roomgoto",{"_index":278,"title":{},"body":{"classes/Game.html":{}}}],["roomgoto(roomkey",{"_index":308,"title":{},"body":{"classes/Game.html":{}}}],["roomheight",{"_index":592,"title":{},"body":{"classes/Room.html":{}}}],["roomkey",{"_index":311,"title":{},"body":{"classes/Game.html":{}}}],["roommenu",{"_index":619,"title":{},"body":{"classes/Room.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["rooms/room_menu",{"_index":623,"title":{},"body":{"classes/Room.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["roomtoadd",{"_index":300,"title":{},"body":{"classes/Game.html":{}}}],["roomtoadd.setgame(thi",{"_index":391,"title":{},"body":{"classes/Game.html":{}}}],["roomwidth",{"_index":593,"title":{},"body":{"classes/Room.html":{}}}],["rpg",{"_index":877,"title":{},"body":{"index.html":{}}}],["rpgbaker",{"_index":316,"title":{},"body":{"classes/Game.html":{},"classes/GameObject.html":{},"classes/Room.html":{},"index.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["run",{"_index":370,"title":{},"body":{"classes/Game.html":{}}}],["s",{"_index":862,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sampl",{"_index":488,"title":{},"body":{"classes/GameObject.html":{}}}],["scorefunct",{"_index":124,"title":{},"body":{"classes/BinaryHeap.html":{}}}],["scroll",{"_index":350,"title":{},"body":{"classes/Game.html":{}}}],["search",{"_index":8,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["search(graph",{"_index":42,"title":{},"body":{"classes/AStar.html":{}}}],["seen",{"_index":98,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["sell",{"_index":910,"title":{},"body":{"license.html":{}}}],["set",{"_index":57,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["setalarm",{"_index":430,"title":{},"body":{"classes/GameObject.html":{}}}],["setalarm(alarmindex",{"_index":466,"title":{},"body":{"classes/GameObject.html":{}}}],["setgam",{"_index":596,"title":{},"body":{"classes/Room.html":{}}}],["setgame(newgam",{"_index":612,"title":{},"body":{"classes/Room.html":{}}}],["sethitarea",{"_index":431,"title":{},"body":{"classes/GameObject.html":{}}}],["sethitarea(newrectangl",{"_index":469,"title":{},"body":{"classes/GameObject.html":{}}}],["setposit",{"_index":432,"title":{},"body":{"classes/GameObject.html":{}}}],["setposition(x",{"_index":475,"title":{},"body":{"classes/GameObject.html":{}}}],["setup",{"_index":371,"title":{},"body":{"classes/Game.html":{}}}],["shall",{"_index":917,"title":{},"body":{"license.html":{}}}],["simplic",{"_index":496,"title":{},"body":{"classes/GameObject.html":{}}}],["sinkdown",{"_index":128,"title":{},"body":{"classes/BinaryHeap.html":{}}}],["sinkdown(n",{"_index":143,"title":{},"body":{"classes/BinaryHeap.html":{}}}],["size",{"_index":129,"title":{},"body":{"classes/BinaryHeap.html":{}}}],["softwar",{"_index":897,"title":{},"body":{"license.html":{}}}],["sort",{"_index":72,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"classes/Utils.html":{}}}],["specif",{"_index":164,"title":{},"body":{"classes/Camera.html":{},"classes/Game.html":{}}}],["specifi",{"_index":643,"title":{},"body":{"classes/TileLayer.html":{}}}],["speed",{"_index":215,"title":{},"body":{"classes/CutScene.html":{}}}],["sprite",{"_index":655,"title":{},"body":{"classes/TileLayer.html":{}}}],["src/.../cutscene.t",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../foo.t",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../gameobject.t",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.t",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../input.t",{"_index":852,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../room.t",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/astar.t",{"_index":5,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"coverage.html":{}}}],["src/astar.ts:109",{"_index":38,"title":{},"body":{"classes/AStar.html":{}}}],["src/astar.ts:114",{"_index":34,"title":{},"body":{"classes/AStar.html":{}}}],["src/astar.ts:122",{"_index":40,"title":{},"body":{"classes/AStar.html":{}}}],["src/astar.ts:132",{"_index":24,"title":{},"body":{"classes/AStar.html":{}}}],["src/astar.ts:150",{"_index":559,"title":{},"body":{"classes/Graph.html":{}}}],["src/astar.ts:151",{"_index":557,"title":{},"body":{"classes/Graph.html":{}}}],["src/astar.ts:152",{"_index":558,"title":{},"body":{"classes/Graph.html":{}}}],["src/astar.ts:153",{"_index":555,"title":{},"body":{"classes/Graph.html":{}}}],["src/astar.ts:171",{"_index":561,"title":{},"body":{"classes/Graph.html":{}}}],["src/astar.ts:178",{"_index":560,"title":{},"body":{"classes/Graph.html":{}}}],["src/astar.ts:185",{"_index":563,"title":{},"body":{"classes/Graph.html":{}}}],["src/astar.ts:189",{"_index":565,"title":{},"body":{"classes/Graph.html":{}}}],["src/astar.ts:21",{"_index":43,"title":{},"body":{"classes/AStar.html":{}}}],["src/astar.ts:240",{"_index":566,"title":{},"body":{"classes/Graph.html":{}}}],["src/astar.ts:256",{"_index":582,"title":{},"body":{"classes/GridNode.html":{}}}],["src/astar.ts:257",{"_index":583,"title":{},"body":{"classes/GridNode.html":{}}}],["src/astar.ts:258",{"_index":581,"title":{},"body":{"classes/GridNode.html":{}}}],["src/astar.ts:260",{"_index":577,"title":{},"body":{"classes/GridNode.html":{}}}],["src/astar.ts:261",{"_index":578,"title":{},"body":{"classes/GridNode.html":{}}}],["src/astar.ts:262",{"_index":579,"title":{},"body":{"classes/GridNode.html":{}}}],["src/astar.ts:263",{"_index":580,"title":{},"body":{"classes/GridNode.html":{}}}],["src/astar.ts:264",{"_index":576,"title":{},"body":{"classes/GridNode.html":{}}}],["src/astar.ts:265",{"_index":575,"title":{},"body":{"classes/GridNode.html":{}}}],["src/astar.ts:273",{"_index":588,"title":{},"body":{"classes/GridNode.html":{}}}],["src/astar.ts:277",{"_index":585,"title":{},"body":{"classes/GridNode.html":{}}}],["src/astar.ts:285",{"_index":587,"title":{},"body":{"classes/GridNode.html":{}}}],["src/astar.ts:291",{"_index":133,"title":{},"body":{"classes/BinaryHeap.html":{}}}],["src/astar.ts:292",{"_index":132,"title":{},"body":{"classes/BinaryHeap.html":{}}}],["src/astar.ts:299",{"_index":138,"title":{},"body":{"classes/BinaryHeap.html":{}}}],["src/astar.ts:307",{"_index":136,"title":{},"body":{"classes/BinaryHeap.html":{}}}],["src/astar.ts:320",{"_index":140,"title":{},"body":{"classes/BinaryHeap.html":{}}}],["src/astar.ts:338",{"_index":145,"title":{},"body":{"classes/BinaryHeap.html":{}}}],["src/astar.ts:342",{"_index":142,"title":{},"body":{"classes/BinaryHeap.html":{}}}],["src/astar.ts:346",{"_index":144,"title":{},"body":{"classes/BinaryHeap.html":{}}}],["src/astar.ts:369",{"_index":135,"title":{},"body":{"classes/BinaryHeap.html":{}}}],["src/camera.t",{"_index":147,"title":{},"body":{"classes/Camera.html":{},"coverage.html":{}}}],["src/camera.ts:22",{"_index":162,"title":{},"body":{"classes/Camera.html":{}}}],["src/camera.ts:31",{"_index":166,"title":{},"body":{"classes/Camera.html":{}}}],["src/camera.ts:6",{"_index":158,"title":{},"body":{"classes/Camera.html":{}}}],["src/camera.ts:7",{"_index":160,"title":{},"body":{"classes/Camera.html":{}}}],["src/camera.ts:8",{"_index":157,"title":{},"body":{"classes/Camera.html":{}}}],["src/camera.ts:9",{"_index":155,"title":{},"body":{"classes/Camera.html":{}}}],["src/cutscene.t",{"_index":191,"title":{},"body":{"classes/CutScene.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cutscene.ts:100",{"_index":218,"title":{},"body":{"classes/CutScene.html":{}}}],["src/cutscene.ts:11",{"_index":205,"title":{},"body":{"classes/CutScene.html":{}}}],["src/cutscene.ts:12",{"_index":208,"title":{},"body":{"classes/CutScene.html":{}}}],["src/cutscene.ts:13",{"_index":203,"title":{},"body":{"classes/CutScene.html":{}}}],["src/cutscene.ts:14",{"_index":206,"title":{},"body":{"classes/CutScene.html":{}}}],["src/cutscene.ts:15",{"_index":207,"title":{},"body":{"classes/CutScene.html":{}}}],["src/cutscene.ts:16",{"_index":204,"title":{},"body":{"classes/CutScene.html":{}}}],["src/cutscene.ts:17",{"_index":202,"title":{},"body":{"classes/CutScene.html":{}}}],["src/cutscene.ts:29",{"_index":220,"title":{},"body":{"classes/CutScene.html":{}}}],["src/cutscene.ts:39",{"_index":216,"title":{},"body":{"classes/CutScene.html":{}}}],["src/cutscene.ts:92",{"_index":209,"title":{},"body":{"classes/CutScene.html":{}}}],["src/foo.t",{"_index":827,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/gameobject.t",{"_index":417,"title":{},"body":{"classes/GameObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/gameobject.ts:110",{"_index":468,"title":{},"body":{"classes/GameObject.html":{}}}],["src/gameobject.ts:115",{"_index":460,"title":{},"body":{"classes/GameObject.html":{}}}],["src/gameobject.ts:119",{"_index":480,"title":{},"body":{"classes/GameObject.html":{}}}],["src/gameobject.ts:130",{"_index":447,"title":{},"body":{"classes/GameObject.html":{}}}],["src/gameobject.ts:14",{"_index":439,"title":{},"body":{"classes/GameObject.html":{}}}],["src/gameobject.ts:15",{"_index":441,"title":{},"body":{"classes/GameObject.html":{}}}],["src/gameobject.ts:16",{"_index":438,"title":{},"body":{"classes/GameObject.html":{}}}],["src/gameobject.ts:165",{"_index":465,"title":{},"body":{"classes/GameObject.html":{}}}],["src/gameobject.ts:17",{"_index":440,"title":{},"body":{"classes/GameObject.html":{}}}],["src/gameobject.ts:18",{"_index":434,"title":{},"body":{"classes/GameObject.html":{}}}],["src/gameobject.ts:19",{"_index":436,"title":{},"body":{"classes/GameObject.html":{}}}],["src/gameobject.ts:196",{"_index":452,"title":{},"body":{"classes/GameObject.html":{}}}],["src/gameobject.ts:20",{"_index":433,"title":{},"body":{"classes/GameObject.html":{}}}],["src/gameobject.ts:220",{"_index":476,"title":{},"body":{"classes/GameObject.html":{}}}],["src/gameobject.ts:226",{"_index":458,"title":{},"body":{"classes/GameObject.html":{}}}],["src/gameobject.ts:248",{"_index":463,"title":{},"body":{"classes/GameObject.html":{}}}],["src/gameobject.ts:252",{"_index":462,"title":{},"body":{"classes/GameObject.html":{}}}],["src/gameobject.ts:47",{"_index":450,"title":{},"body":{"classes/GameObject.html":{}}}],["src/gameobject.ts:75",{"_index":470,"title":{},"body":{"classes/GameObject.html":{}}}],["src/gameobject.ts:93",{"_index":449,"title":{},"body":{"classes/GameObject.html":{}}}],["src/gameobject.ts:96",{"_index":477,"title":{},"body":{"classes/GameObject.html":{}}}],["src/index.t",{"_index":262,"title":{},"body":{"classes/Game.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/index.ts:103",{"_index":297,"title":{},"body":{"classes/Game.html":{}}}],["src/index.ts:114",{"_index":309,"title":{},"body":{"classes/Game.html":{}}}],["src/index.ts:118",{"_index":302,"title":{},"body":{"classes/Game.html":{}}}],["src/index.ts:137",{"_index":312,"title":{},"body":{"classes/Game.html":{}}}],["src/index.ts:153",{"_index":303,"title":{},"body":{"classes/Game.html":{}}}],["src/index.ts:157",{"_index":305,"title":{},"body":{"classes/Game.html":{}}}],["src/index.ts:164",{"_index":304,"title":{},"body":{"classes/Game.html":{}}}],["src/index.ts:21",{"_index":286,"title":{},"body":{"classes/Game.html":{}}}],["src/index.ts:22",{"_index":294,"title":{},"body":{"classes/Game.html":{}}}],["src/index.ts:23",{"_index":285,"title":{},"body":{"classes/Game.html":{}}}],["src/index.ts:24",{"_index":288,"title":{},"body":{"classes/Game.html":{}}}],["src/index.ts:25",{"_index":287,"title":{},"body":{"classes/Game.html":{}}}],["src/index.ts:26",{"_index":284,"title":{},"body":{"classes/Game.html":{}}}],["src/index.ts:27",{"_index":292,"title":{},"body":{"classes/Game.html":{}}}],["src/index.ts:28",{"_index":289,"title":{},"body":{"classes/Game.html":{}}}],["src/index.ts:29",{"_index":291,"title":{},"body":{"classes/Game.html":{}}}],["src/index.ts:30",{"_index":281,"title":{},"body":{"classes/Game.html":{}}}],["src/index.ts:81",{"_index":306,"title":{},"body":{"classes/Game.html":{}}}],["src/index.ts:88",{"_index":307,"title":{},"body":{"classes/Game.html":{}}}],["src/input.t",{"_index":833,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/room.t",{"_index":589,"title":{},"body":{"classes/Room.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/room.ts:11",{"_index":600,"title":{},"body":{"classes/Room.html":{}}}],["src/room.ts:12",{"_index":599,"title":{},"body":{"classes/Room.html":{}}}],["src/room.ts:13",{"_index":601,"title":{},"body":{"classes/Room.html":{}}}],["src/room.ts:15",{"_index":602,"title":{},"body":{"classes/Room.html":{}}}],["src/room.ts:16",{"_index":598,"title":{},"body":{"classes/Room.html":{}}}],["src/room.ts:25",{"_index":611,"title":{},"body":{"classes/Room.html":{}}}],["src/room.ts:35",{"_index":613,"title":{},"body":{"classes/Room.html":{}}}],["src/room.ts:39",{"_index":617,"title":{},"body":{"classes/Room.html":{}}}],["src/room.ts:50",{"_index":604,"title":{},"body":{"classes/Room.html":{}}}],["src/room.ts:59",{"_index":609,"title":{},"body":{"classes/Room.html":{}}}],["src/room.ts:70",{"_index":616,"title":{},"body":{"classes/Room.html":{}}}],["src/room.ts:88",{"_index":606,"title":{},"body":{"classes/Room.html":{}}}],["src/tilelayer.t",{"_index":631,"title":{},"body":{"classes/TileLayer.html":{},"coverage.html":{}}}],["src/tilelayer.ts:10",{"_index":635,"title":{},"body":{"classes/TileLayer.html":{}}}],["src/tilelayer.ts:18",{"_index":645,"title":{},"body":{"classes/TileLayer.html":{}}}],["src/tilelayer.ts:69",{"_index":640,"title":{},"body":{"classes/TileLayer.html":{}}}],["src/tilelayer.ts:7",{"_index":638,"title":{},"body":{"classes/TileLayer.html":{}}}],["src/tilelayer.ts:74",{"_index":646,"title":{},"body":{"classes/TileLayer.html":{}}}],["src/tilelayer.ts:8",{"_index":636,"title":{},"body":{"classes/TileLayer.html":{}}}],["src/tilelayer.ts:9",{"_index":637,"title":{},"body":{"classes/TileLayer.html":{}}}],["src/tilemap.t",{"_index":683,"title":{},"body":{"classes/TileMap.html":{},"coverage.html":{}}}],["src/tilemap.ts:10",{"_index":691,"title":{},"body":{"classes/TileMap.html":{}}}],["src/tilemap.ts:11",{"_index":693,"title":{},"body":{"classes/TileMap.html":{}}}],["src/tilemap.ts:12",{"_index":692,"title":{},"body":{"classes/TileMap.html":{}}}],["src/tilemap.ts:13",{"_index":689,"title":{},"body":{"classes/TileMap.html":{}}}],["src/tilemap.ts:14",{"_index":688,"title":{},"body":{"classes/TileMap.html":{}}}],["src/tilemap.ts:26",{"_index":703,"title":{},"body":{"classes/TileMap.html":{}}}],["src/tilemap.ts:45",{"_index":705,"title":{},"body":{"classes/TileMap.html":{}}}],["src/tilemap.ts:59",{"_index":706,"title":{},"body":{"classes/TileMap.html":{}}}],["src/tilemap.ts:66",{"_index":698,"title":{},"body":{"classes/TileMap.html":{}}}],["src/tilemap.ts:71",{"_index":701,"title":{},"body":{"classes/TileMap.html":{}}}],["src/tilemap.ts:9",{"_index":690,"title":{},"body":{"classes/TileMap.html":{}}}],["src/tileset.t",{"_index":727,"title":{},"body":{"classes/TileSet.html":{},"coverage.html":{}}}],["src/tileset.ts:10",{"_index":736,"title":{},"body":{"classes/TileSet.html":{}}}],["src/tileset.ts:11",{"_index":742,"title":{},"body":{"classes/TileSet.html":{}}}],["src/tileset.ts:12",{"_index":741,"title":{},"body":{"classes/TileSet.html":{}}}],["src/tileset.ts:13",{"_index":734,"title":{},"body":{"classes/TileSet.html":{}}}],["src/tileset.ts:20",{"_index":743,"title":{},"body":{"classes/TileSet.html":{}}}],["src/tileset.ts:5",{"_index":739,"title":{},"body":{"classes/TileSet.html":{}}}],["src/tileset.ts:6",{"_index":738,"title":{},"body":{"classes/TileSet.html":{}}}],["src/tileset.ts:7",{"_index":740,"title":{},"body":{"classes/TileSet.html":{}}}],["src/tileset.ts:8",{"_index":735,"title":{},"body":{"classes/TileSet.html":{}}}],["src/tileset.ts:9",{"_index":737,"title":{},"body":{"classes/TileSet.html":{}}}],["src/utils.t",{"_index":760,"title":{},"body":{"classes/Utils.html":{},"coverage.html":{}}}],["src/utils.ts:128",{"_index":781,"title":{},"body":{"classes/Utils.html":{}}}],["src/utils.ts:132",{"_index":775,"title":{},"body":{"classes/Utils.html":{}}}],["src/utils.ts:136",{"_index":778,"title":{},"body":{"classes/Utils.html":{}}}],["src/utils.ts:140",{"_index":772,"title":{},"body":{"classes/Utils.html":{}}}],["src/utils.ts:144",{"_index":796,"title":{},"body":{"classes/Utils.html":{}}}],["src/utils.ts:148",{"_index":794,"title":{},"body":{"classes/Utils.html":{}}}],["src/utils.ts:164",{"_index":789,"title":{},"body":{"classes/Utils.html":{}}}],["src/utils.ts:168",{"_index":792,"title":{},"body":{"classes/Utils.html":{}}}],["src/utils.ts:18",{"_index":784,"title":{},"body":{"classes/Utils.html":{}}}],["src/utils.ts:5",{"_index":798,"title":{},"body":{"classes/Utils.html":{}}}],["src/utils.ts:72",{"_index":787,"title":{},"body":{"classes/Utils.html":{}}}],["start",{"_index":11,"title":{"index.html":{},"license.html":{}},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["start.h",{"_index":59,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["statement",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":17,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Utils.html":{}}}],["string",{"_index":201,"title":{},"body":{"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"miscellaneous/variables.html":{}}}],["structur",{"_index":548,"title":{},"body":{"classes/Graph.html":{}}}],["subclass",{"_index":618,"title":{},"body":{"classes/Room.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["subject",{"_index":913,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":908,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":918,"title":{},"body":{"license.html":{}}}],["super",{"_index":500,"title":{},"body":{"classes/GameObject.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{}}}],["super.init",{"_index":621,"title":{},"body":{"classes/Room.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["super.update(delta",{"_index":622,"title":{},"body":{"classes/Room.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["swap",{"_index":116,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["tabl",{"_index":840,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":839,"title":{},"body":{"coverage.html":{}}}],["tell",{"_index":163,"title":{},"body":{"classes/Camera.html":{}}}],["tempdiff",{"_index":726,"title":{},"body":{"classes/TileMap.html":{}}}],["tempgao",{"_index":242,"title":{},"body":{"classes/CutScene.html":{}}}],["tempgao.i",{"_index":247,"title":{},"body":{"classes/CutScene.html":{}}}],["tempgao.x",{"_index":246,"title":{},"body":{"classes/CutScene.html":{}}}],["tempnumb",{"_index":677,"title":{},"body":{"classes/TileLayer.html":{}}}],["tempobject",{"_index":654,"title":{},"body":{"classes/TileLayer.html":{}}}],["tempsprit",{"_index":672,"title":{},"body":{"classes/TileLayer.html":{}}}],["tempsprite.i",{"_index":675,"title":{},"body":{"classes/TileLayer.html":{}}}],["tempsprite.x",{"_index":674,"title":{},"body":{"classes/TileLayer.html":{}}}],["temptextur",{"_index":669,"title":{},"body":{"classes/TileLayer.html":{}}}],["temptexturenam",{"_index":755,"title":{},"body":{"classes/TileSet.html":{}}}],["test",{"_index":324,"title":{},"body":{"classes/Game.html":{}}}],["textur",{"_index":731,"title":{},"body":{"classes/TileSet.html":{},"classes/Utils.html":{}}}],["this.addchild(tempsprit",{"_index":676,"title":{},"body":{"classes/TileLayer.html":{}}}],["this.addchild(this.graphicshitarea",{"_index":523,"title":{},"body":{"classes/GameObject.html":{}}}],["this.addchild(this.layers[layer.nam",{"_index":725,"title":{},"body":{"classes/TileMap.html":{}}}],["this.alarm",{"_index":510,"title":{},"body":{"classes/GameObject.html":{}}}],["this.alarms[alarmindex",{"_index":536,"title":{},"body":{"classes/GameObject.html":{}}}],["this.alarms[propertynam",{"_index":532,"title":{},"body":{"classes/GameObject.html":{}}}],["this.app",{"_index":329,"title":{},"body":{"classes/Game.html":{}}}],["this.app.renderer.plugins.interaction.hittest",{"_index":347,"title":{},"body":{"classes/Game.html":{}}}],["this.app.stag",{"_index":348,"title":{},"body":{"classes/Game.html":{}}}],["this.app.stage.addchild(roomtoadd",{"_index":388,"title":{},"body":{"classes/Game.html":{}}}],["this.app.stage.addchild(this.ui",{"_index":382,"title":{},"body":{"classes/Game.html":{}}}],["this.app.stage.i",{"_index":411,"title":{},"body":{"classes/Game.html":{}}}],["this.app.stage.x",{"_index":409,"title":{},"body":{"classes/Game.html":{}}}],["this.app.ticker.add((delta",{"_index":385,"title":{},"body":{"classes/Game.html":{}}}],["this.app.view.addeventlistener('mousewheel",{"_index":339,"title":{},"body":{"classes/Game.html":{}}}],["this.borderi",{"_index":176,"title":{},"body":{"classes/Camera.html":{}}}],["this.borderx",{"_index":174,"title":{},"body":{"classes/Camera.html":{}}}],["this.bubbleup(0",{"_index":95,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["this.camera",{"_index":363,"title":{},"body":{"classes/Game.html":{}}}],["this.camera.update(delta",{"_index":405,"title":{},"body":{"classes/Game.html":{}}}],["this.checkroomtransit",{"_index":406,"title":{},"body":{"classes/Game.html":{}}}],["this.children.sort((itema",{"_index":679,"title":{},"body":{"classes/TileLayer.html":{}}}],["this.content.indexof(nod",{"_index":97,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["this.content.length",{"_index":105,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["this.content.pop",{"_index":104,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["this.content[0",{"_index":94,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["this.content[i",{"_index":107,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["this.content[parentn",{"_index":115,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["this.currentroomkey",{"_index":361,"title":{},"body":{"classes/Game.html":{}}}],["this.currentscen",{"_index":232,"title":{},"body":{"classes/CutScene.html":{}}}],["this.desti",{"_index":234,"title":{},"body":{"classes/CutScene.html":{}}}],["this.destx",{"_index":233,"title":{},"body":{"classes/CutScene.html":{}}}],["this.endact",{"_index":240,"title":{},"body":{"classes/CutScene.html":{}}}],["this.firstgid",{"_index":745,"title":{},"body":{"classes/TileSet.html":{}}}],["this.gam",{"_index":171,"title":{},"body":{"classes/Camera.html":{},"classes/Room.html":{}}}],["this.game.app.renderer.height",{"_index":189,"title":{},"body":{"classes/Camera.html":{}}}],["this.game.app.renderer.width",{"_index":185,"title":{},"body":{"classes/Camera.html":{}}}],["this.game.app.stage.position.i",{"_index":187,"title":{},"body":{"classes/Camera.html":{}}}],["this.game.app.stage.position.x",{"_index":183,"title":{},"body":{"classes/Camera.html":{}}}],["this.gao",{"_index":630,"title":{},"body":{"classes/Room.html":{}}}],["this.gaotofollow",{"_index":172,"title":{},"body":{"classes/Camera.html":{}}}],["this.gaotofollow.i",{"_index":188,"title":{},"body":{"classes/Camera.html":{}}}],["this.gaotofollow.x",{"_index":184,"title":{},"body":{"classes/Camera.html":{}}}],["this.getcurrentroom",{"_index":413,"title":{},"body":{"classes/Game.html":{}}}],["this.graphicshitarea",{"_index":514,"title":{},"body":{"classes/GameObject.html":{}}}],["this.graphicshitarea.alpha",{"_index":524,"title":{},"body":{"classes/GameObject.html":{}}}],["this.graphicshitarea.beginfill(0xffff00",{"_index":515,"title":{},"body":{"classes/GameObject.html":{}}}],["this.graphicshitarea.drawrect",{"_index":518,"title":{},"body":{"classes/GameObject.html":{}}}],["this.graphicshitarea.linestyle(1",{"_index":516,"title":{},"body":{"classes/GameObject.html":{}}}],["this.grid",{"_index":708,"title":{},"body":{"classes/TileMap.html":{}}}],["this.group",{"_index":328,"title":{},"body":{"classes/Game.html":{}}}],["this.height",{"_index":507,"title":{},"body":{"classes/GameObject.html":{}}}],["this.hitarea",{"_index":513,"title":{},"body":{"classes/GameObject.html":{}}}],["this.hitarea.height",{"_index":522,"title":{},"body":{"classes/GameObject.html":{}}}],["this.hitarea.i",{"_index":520,"title":{},"body":{"classes/GameObject.html":{}}}],["this.hitarea.width",{"_index":521,"title":{},"body":{"classes/GameObject.html":{}}}],["this.hitarea.x",{"_index":519,"title":{},"body":{"classes/GameObject.html":{}}}],["this.i",{"_index":503,"title":{},"body":{"classes/GameObject.html":{}}}],["this.imageheight",{"_index":749,"title":{},"body":{"classes/TileSet.html":{}}}],["this.imagewidth",{"_index":747,"title":{},"body":{"classes/TileSet.html":{}}}],["this.initgridfromlayer(this.layers[layer.nam",{"_index":724,"title":{},"body":{"classes/TileMap.html":{}}}],["this.input",{"_index":365,"title":{},"body":{"classes/Game.html":{}}}],["this.input.init",{"_index":379,"title":{},"body":{"classes/Game.html":{}}}],["this.input.upd",{"_index":404,"title":{},"body":{"classes/Game.html":{}}}],["this.isobjectlay",{"_index":649,"title":{},"body":{"classes/TileLayer.html":{}}}],["this.jsonobject",{"_index":230,"title":{},"body":{"classes/CutScene.html":{},"classes/GameObject.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{}}}],["this.jsonobject.data",{"_index":656,"title":{},"body":{"classes/TileLayer.html":{}}}],["this.jsonobject.data.foreach((tileidx",{"_index":657,"title":{},"body":{"classes/TileLayer.html":{}}}],["this.jsonobject.data[tempnumb",{"_index":678,"title":{},"body":{"classes/TileLayer.html":{}}}],["this.jsonobject.firstgid",{"_index":746,"title":{},"body":{"classes/TileSet.html":{}}}],["this.jsonobject.height",{"_index":508,"title":{},"body":{"classes/GameObject.html":{}}}],["this.jsonobject.i",{"_index":504,"title":{},"body":{"classes/GameObject.html":{}}}],["this.jsonobject.imag",{"_index":757,"title":{},"body":{"classes/TileSet.html":{}}}],["this.jsonobject.imageheight",{"_index":750,"title":{},"body":{"classes/TileSet.html":{}}}],["this.jsonobject.imagewidth",{"_index":748,"title":{},"body":{"classes/TileSet.html":{}}}],["this.jsonobject.layers.foreach((lay",{"_index":715,"title":{},"body":{"classes/TileMap.html":{}}}],["this.jsonobject.nam",{"_index":744,"title":{},"body":{"classes/TileSet.html":{}}}],["this.jsonobject.object",{"_index":650,"title":{},"body":{"classes/TileLayer.html":{}}}],["this.jsonobject.objects.foreach((tempobject",{"_index":652,"title":{},"body":{"classes/TileLayer.html":{}}}],["this.jsonobject.scenes.length",{"_index":259,"title":{},"body":{"classes/CutScene.html":{}}}],["this.jsonobject.scenes[this.currentscene].act",{"_index":261,"title":{},"body":{"classes/CutScene.html":{}}}],["this.jsonobject.tileheight",{"_index":754,"title":{},"body":{"classes/TileSet.html":{}}}],["this.jsonobject.tilesets.foreach((tileset",{"_index":709,"title":{},"body":{"classes/TileMap.html":{}}}],["this.jsonobject.tilewidth",{"_index":752,"title":{},"body":{"classes/TileSet.html":{}}}],["this.jsonobject.width",{"_index":506,"title":{},"body":{"classes/GameObject.html":{},"classes/TileLayer.html":{}}}],["this.jsonobject.x",{"_index":502,"title":{},"body":{"classes/GameObject.html":{}}}],["this.lay",{"_index":327,"title":{},"body":{"classes/Game.html":{},"classes/TileMap.html":{}}}],["this.layers[layer.nam",{"_index":718,"title":{},"body":{"classes/TileMap.html":{}}}],["this.layers[layer.name].init",{"_index":720,"title":{},"body":{"classes/TileMap.html":{}}}],["this.loadcallback",{"_index":648,"title":{},"body":{"classes/TileLayer.html":{},"classes/TileMap.html":{}}}],["this.loadcallback(thi",{"_index":653,"title":{},"body":{"classes/TileLayer.html":{}}}],["this.manhattan",{"_index":48,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["this.mouseposit",{"_index":338,"title":{},"body":{"classes/Game.html":{}}}],["this.mouseposition.set(ev.clientx",{"_index":341,"title":{},"body":{"classes/Game.html":{}}}],["this.mypar",{"_index":647,"title":{},"body":{"classes/TileLayer.html":{},"classes/TileSet.html":{}}}],["this.myparent.findtilesetforgid(tileidx",{"_index":663,"title":{},"body":{"classes/TileLayer.html":{}}}],["this.nam",{"_index":228,"title":{},"body":{"classes/CutScene.html":{},"classes/GameObject.html":{},"classes/Room.html":{},"classes/TileSet.html":{}}}],["this.nextroomkey",{"_index":362,"title":{},"body":{"classes/Game.html":{}}}],["this.onalarm(propertynam",{"_index":534,"title":{},"body":{"classes/GameObject.html":{}}}],["this.onloadeddon",{"_index":366,"title":{},"body":{"classes/Game.html":{}}}],["this.onloadeddone.bind(thi",{"_index":367,"title":{},"body":{"classes/Game.html":{}}}],["this.persist",{"_index":509,"title":{},"body":{"classes/GameObject.html":{}}}],["this.pivot.i",{"_index":512,"title":{},"body":{"classes/GameObject.html":{}}}],["this.pivot.x",{"_index":511,"title":{},"body":{"classes/GameObject.html":{}}}],["this.removechild(this.graphicshitarea",{"_index":525,"title":{},"body":{"classes/GameObject.html":{}}}],["this.room",{"_index":229,"title":{},"body":{"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{}}}],["this.room.gao",{"_index":538,"title":{},"body":{"classes/GameObject.html":{}}}],["this.room.getgaobyname(objectnam",{"_index":243,"title":{},"body":{"classes/CutScene.html":{}}}],["this.room.roomheight",{"_index":543,"title":{},"body":{"classes/GameObject.html":{}}}],["this.room.roomwidth",{"_index":539,"title":{},"body":{"classes/GameObject.html":{}}}],["this.rooms.entri",{"_index":400,"title":{},"body":{"classes/Game.html":{}}}],["this.rooms.get(roomtoadd.name).vis",{"_index":390,"title":{},"body":{"classes/Game.html":{}}}],["this.rooms.get(this.currentroomkey",{"_index":393,"title":{},"body":{"classes/Game.html":{}}}],["this.rooms.get(this.nextroomkey",{"_index":395,"title":{},"body":{"classes/Game.html":{}}}],["this.rooms.set(roomtoadd.nam",{"_index":389,"title":{},"body":{"classes/Game.html":{}}}],["this.scorefunction(el",{"_index":119,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["this.scorefunction(end",{"_index":108,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["this.textur",{"_index":758,"title":{},"body":{"classes/TileSet.html":{}}}],["this.tileheight",{"_index":753,"title":{},"body":{"classes/TileSet.html":{}}}],["this.tileset",{"_index":707,"title":{},"body":{"classes/TileMap.html":{}}}],["this.tilesets[tileset.nam",{"_index":712,"title":{},"body":{"classes/TileMap.html":{}}}],["this.tilesets[tileset.name].init",{"_index":714,"title":{},"body":{"classes/TileMap.html":{}}}],["this.tilewidth",{"_index":751,"title":{},"body":{"classes/TileSet.html":{}}}],["this.tim",{"_index":231,"title":{},"body":{"classes/CutScene.html":{}}}],["this.ui",{"_index":381,"title":{},"body":{"classes/Game.html":{}}}],["this.ui.i",{"_index":410,"title":{},"body":{"classes/Game.html":{}}}],["this.ui.x",{"_index":408,"title":{},"body":{"classes/Game.html":{}}}],["this.update(0",{"_index":179,"title":{},"body":{"classes/Camera.html":{}}}],["this.update(delta",{"_index":386,"title":{},"body":{"classes/Game.html":{}}}],["this.width",{"_index":505,"title":{},"body":{"classes/GameObject.html":{}}}],["this.x",{"_index":501,"title":{},"body":{"classes/GameObject.html":{}}}],["ticker.fp",{"_index":238,"title":{},"body":{"classes/CutScene.html":{}}}],["tile",{"_index":641,"title":{},"body":{"classes/TileLayer.html":{},"classes/TileMap.html":{}}}],["tileheight",{"_index":732,"title":{},"body":{"classes/TileSet.html":{}}}],["tileidx",{"_index":658,"title":{},"body":{"classes/TileLayer.html":{}}}],["tilelay",{"_index":314,"title":{"classes/TileLayer.html":{}},"body":{"classes/Game.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"coverage.html":{}}}],["tilelayer(thi",{"_index":719,"title":{},"body":{"classes/TileMap.html":{}}}],["tilemap",{"_index":313,"title":{"classes/TileMap.html":{}},"body":{"classes/Game.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"coverage.html":{}}}],["tileset",{"_index":661,"title":{"classes/TileSet.html":{}},"body":{"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"coverage.html":{}}}],["tileset(thi",{"_index":713,"title":{},"body":{"classes/TileMap.html":{}}}],["tileset.nam",{"_index":711,"title":{},"body":{"classes/TileMap.html":{}}}],["tilewidth",{"_index":733,"title":{},"body":{"classes/TileSet.html":{}}}],["timer",{"_index":197,"title":{},"body":{"classes/CutScene.html":{}}}],["todo",{"_index":236,"title":{},"body":{"classes/CutScene.html":{},"classes/Game.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{}}}],["tort",{"_index":939,"title":{},"body":{"license.html":{}}}],["tostr",{"_index":553,"title":{},"body":{"classes/Graph.html":{},"classes/GridNode.html":{}}}],["tox",{"_index":696,"title":{},"body":{"classes/TileMap.html":{}}}],["toy",{"_index":697,"title":{},"body":{"classes/TileMap.html":{}}}],["trace",{"_index":78,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{}}}],["transferpersistentobjectsto",{"_index":597,"title":{},"body":{"classes/Room.html":{}}}],["transferpersistentobjectsto(newroom",{"_index":615,"title":{},"body":{"classes/Room.html":{}}}],["transpar",{"_index":336,"title":{},"body":{"classes/Game.html":{}}}],["tri",{"_index":607,"title":{},"body":{"classes/Room.html":{}}}],["true",{"_index":88,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/TileLayer.html":{}}}],["tutori",{"_index":629,"title":{},"body":{"classes/Room.html":{}}}],["type",{"_index":28,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{},"classes/Utils.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/debug",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":270,"title":{},"body":{"classes/Game.html":{}}}],["undefin",{"_index":244,"title":{},"body":{"classes/CutScene.html":{},"classes/Room.html":{},"classes/TileLayer.html":{}}}],["under",{"_index":345,"title":{},"body":{"classes/Game.html":{}}}],["unfortun",{"_index":483,"title":{},"body":{"classes/GameObject.html":{}}}],["up",{"_index":102,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"miscellaneous/enumerations.html":{}}}],["updat",{"_index":153,"title":{},"body":{"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"additional-documentation/rooms.html":{},"additional-documentation/rooms/rooms.html":{}}}],["update(delta",{"_index":165,"title":{},"body":{"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{}}}],["us",{"_index":317,"title":{},"body":{"classes/Game.html":{},"license.html":{}}}],["useless",{"_index":485,"title":{},"body":{"classes/GameObject.html":{},"index.html":{}}}],["util",{"_index":225,"title":{"classes/Utils.html":{}},"body":{"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Utils.html":{},"coverage.html":{}}}],["utils.lengthdirx(spe",{"_index":255,"title":{},"body":{"classes/CutScene.html":{}}}],["utils.lengthdiry(spe",{"_index":257,"title":{},"body":{"classes/CutScene.html":{}}}],["utils.pointdirect",{"_index":252,"title":{},"body":{"classes/CutScene.html":{}}}],["utils.pointdist",{"_index":249,"title":{},"body":{"classes/CutScene.html":{}}}],["val",{"_index":399,"title":{},"body":{"classes/Game.html":{}}}],["val.update(delta",{"_index":407,"title":{},"body":{"classes/Game.html":{}}}],["val.vis",{"_index":401,"title":{},"body":{"classes/Game.html":{}}}],["valu",{"_index":530,"title":{},"body":{"classes/GameObject.html":{},"classes/GridNode.html":{},"classes/Room.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":46,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/GridNode.html":{},"classes/Utils.html":{}}}],["variabl",{"_index":825,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["veri",{"_index":481,"title":{},"body":{"classes/GameObject.html":{}}}],["version",{"_index":318,"title":{},"body":{"classes/Game.html":{}}}],["visit",{"_index":570,"title":{},"body":{"classes/GridNode.html":{}}}],["void",{"_index":31,"title":{},"body":{"classes/AStar.html":{},"classes/BinaryHeap.html":{},"classes/Camera.html":{},"classes/CutScene.html":{},"classes/Game.html":{},"classes/GameObject.html":{},"classes/Graph.html":{},"classes/Room.html":{},"classes/TileLayer.html":{},"classes/TileMap.html":{},"classes/TileSet.html":{}}}],["w",{"_index":780,"title":{},"body":{"classes/Utils.html":{},"miscellaneous/enumerations.html":{}}}],["wait",{"_index":199,"title":{},"body":{"classes/CutScene.html":{}}}],["wait(nbsecond",{"_index":219,"title":{},"body":{"classes/CutScene.html":{}}}],["want",{"_index":529,"title":{},"body":{"classes/GameObject.html":{}}}],["warranti",{"_index":921,"title":{},"body":{"license.html":{}}}],["weight",{"_index":571,"title":{},"body":{"classes/GridNode.html":{}}}],["whether",{"_index":936,"title":{},"body":{"license.html":{}}}],["width",{"_index":330,"title":{},"body":{"classes/Game.html":{}}}],["with(classnametocheck",{"_index":478,"title":{},"body":{"classes/GameObject.html":{}}}],["without",{"_index":900,"title":{},"body":{"license.html":{}}}],["world",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x",{"_index":211,"title":{},"body":{"classes/CutScene.html":{},"classes/GameObject.html":{},"classes/GridNode.html":{},"classes/TileLayer.html":{},"classes/Utils.html":{}}}],["x,i",{"_index":454,"title":{},"body":{"classes/GameObject.html":{}}}],["x1",{"_index":448,"title":{},"body":{"classes/GameObject.html":{},"classes/Utils.html":{}}}],["x2",{"_index":444,"title":{},"body":{"classes/GameObject.html":{},"classes/Utils.html":{}}}],["y",{"_index":212,"title":{},"body":{"classes/CutScene.html":{},"classes/GameObject.html":{},"classes/GridNode.html":{},"classes/TileLayer.html":{},"classes/Utils.html":{}}}],["y1",{"_index":443,"title":{},"body":{"classes/GameObject.html":{},"classes/Utils.html":{}}}],["y2",{"_index":445,"title":{},"body":{"classes/GameObject.html":{},"classes/Utils.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AStar.html":{"url":"classes/AStar.html","title":"class - AStar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AStar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/astar.ts\n        \n\n            \n                Description\n            \n            \n                Perform an A* Search on a graph given a start and end node.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                CleanNode\n                            \n                            \n                                    Static\n                                Diagonal\n                            \n                            \n                                    Static\n                                Manhattan\n                            \n                            \n                                    Static\n                                pathTo\n                            \n                            \n                                    Static\n                                Search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            CleanNode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        CleanNode(node: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/astar.ts:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            Diagonal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        Diagonal(pos0: any, pos1: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/astar.ts:114\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pos0\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        pos1\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            Manhattan\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        Manhattan(pos0: any, pos1: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/astar.ts:109\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pos0\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        pos1\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            pathTo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pathTo(node: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/astar.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     GridNode[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            Search\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        Search(graph: Graph, start: GridNode, end: GridNode, options: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/astar.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        graph\n                                                        \n                                                                    Graph\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        start\n                                                        \n                                                                    GridNode\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        end\n                                                        \n                                                                    GridNode\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     GridNode[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class AStar {\n  static Search (\n    graph: Graph,\n    start: GridNode,\n    end: GridNode,\n    options: any\n  ): GridNode[] {\n    graph.CleanDirty()\n    options = options || {}\n    var heuristic = this.Manhattan\n    var closest = options.closest || false\n\n    var openHeap = new BinaryHeap(function (node: any) {\n      return node.f\n    })\n    var closestNode = start // set the start node to be the closest if required\n\n    start.h = heuristic(start, end)\n    graph.MarkDirty(start)\n\n    openHeap.Push(start)\n\n    while (openHeap.Size() > 0) {\n      // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n      var currentNode = openHeap.Pop()\n\n      // End case -- result has been found, return the traced path.\n      if (currentNode === end) {\n        return AStar.pathTo(currentNode)\n      }\n\n      // Normal case -- move currentNode from open to closed, process each of its neighbors.\n      currentNode.closed = true\n\n      // Find all neighbors for the current node.\n      var neighbors = graph.Neighbors(currentNode)\n\n      for (var i = 0, il = neighbors.length; i  0) {\n      this.content[0] = end\n      this.BubbleUp(0)\n    }\n    return result\n  }\n  Remove (node: any) {\n    var i = this.content.indexOf(node)\n\n    // When it is found, the process seen in 'pop' is repeated\n    // to fill up the hole.\n    var end = this.content.pop()\n\n    if (i !== this.content.length - 1) {\n      this.content[i] = end\n\n      if (this.scoreFunction(end)  0) {\n      // Compute the parent element's index, and fetch it.\n      var parentN = ((n + 1) >> 1) - 1\n      var parent = this.content[parentN]\n      // Swap the elements if the parent is greater.\n      if (this.scoreFunction(element) \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BinaryHeap.html":{"url":"classes/BinaryHeap.html","title":"class - BinaryHeap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BinaryHeap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/astar.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                scoreFunction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                BubbleUp\n                            \n                            \n                                Pop\n                            \n                            \n                                Push\n                            \n                            \n                                Remove\n                            \n                            \n                                RescoreElement\n                            \n                            \n                                SinkDown\n                            \n                            \n                                Size\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scoreFunction: any)\n                    \n                \n                        \n                            \n                                Defined in src/astar.ts:292\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scoreFunction\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        content:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/astar.ts:291\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scoreFunction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scoreFunction:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/astar.ts:292\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            BubbleUp\n                            \n                            \n                        \n                    \n                \n                \n                    \nBubbleUp(n: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/astar.ts:369\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        n\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Pop\n                            \n                            \n                        \n                    \n                \n                \n                    \nPop()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/astar.ts:307\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Push\n                            \n                            \n                        \n                    \n                \n                \n                    \nPush(element: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/astar.ts:299\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nRemove(node: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/astar.ts:320\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RescoreElement\n                            \n                            \n                        \n                    \n                \n                \n                    \nRescoreElement(node: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/astar.ts:342\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SinkDown\n                            \n                            \n                        \n                    \n                \n                \n                    \nSinkDown(n: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/astar.ts:346\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        n\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Size\n                            \n                            \n                        \n                    \n                \n                \n                    \nSize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/astar.ts:338\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class AStar {\n  static Search (\n    graph: Graph,\n    start: GridNode,\n    end: GridNode,\n    options: any\n  ): GridNode[] {\n    graph.CleanDirty()\n    options = options || {}\n    var heuristic = this.Manhattan\n    var closest = options.closest || false\n\n    var openHeap = new BinaryHeap(function (node: any) {\n      return node.f\n    })\n    var closestNode = start // set the start node to be the closest if required\n\n    start.h = heuristic(start, end)\n    graph.MarkDirty(start)\n\n    openHeap.Push(start)\n\n    while (openHeap.Size() > 0) {\n      // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n      var currentNode = openHeap.Pop()\n\n      // End case -- result has been found, return the traced path.\n      if (currentNode === end) {\n        return AStar.pathTo(currentNode)\n      }\n\n      // Normal case -- move currentNode from open to closed, process each of its neighbors.\n      currentNode.closed = true\n\n      // Find all neighbors for the current node.\n      var neighbors = graph.Neighbors(currentNode)\n\n      for (var i = 0, il = neighbors.length; i  0) {\n      this.content[0] = end\n      this.BubbleUp(0)\n    }\n    return result\n  }\n  Remove (node: any) {\n    var i = this.content.indexOf(node)\n\n    // When it is found, the process seen in 'pop' is repeated\n    // to fill up the hole.\n    var end = this.content.pop()\n\n    if (i !== this.content.length - 1) {\n      this.content[i] = end\n\n      if (this.scoreFunction(end)  0) {\n      // Compute the parent element's index, and fetch it.\n      var parentN = ((n + 1) >> 1) - 1\n      var parent = this.content[parentN]\n      // Swap the elements if the parent is greater.\n      if (this.scoreFunction(element) \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Camera.html":{"url":"classes/Camera.html","title":"class - Camera","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Camera\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/camera.ts\n        \n\n            \n                Description\n            \n            \n                Camera Class  \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                borderX\n                            \n                            \n                                borderY\n                            \n                            \n                                game\n                            \n                            \n                                gaoToFollow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Follow\n                            \n                            \n                                Update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(myParent: any)\n                    \n                \n                        \n                            \n                                Defined in src/camera.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        myParent\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            borderX\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        borderX:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/camera.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            borderY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        borderY:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/camera.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            game\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        game:     Game\n\n                    \n                \n                    \n                        \n                            Type :     Game\n\n                        \n                    \n                        \n                            \n                                    Defined in src/camera.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gaoToFollow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gaoToFollow:     GameObject\n\n                    \n                \n                    \n                        \n                            Type :     GameObject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/camera.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Follow\n                            \n                            \n                        \n                    \n                \n                \n                    \nFollow(gameObject: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/camera.ts:22\n                            \n                        \n\n\n                \n                    \n                            Tells the Camera to follow a specific GameObject\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        gameObject\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the GameObject to follow\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Update\n                            \n                            \n                        \n                    \n                \n                \n                    \nUpdate(delta: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/camera.ts:31\n                            \n                        \n\n\n                \n                    \n                            Update the position of the camera if any object must be followed\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        delta\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { GameObject } from './gameobject'\nimport { Game } from './index'\n\n/** Camera Class  */\nexport class Camera {\n  game: Game\n  gaoToFollow: GameObject\n  borderX: number\n  borderY: number\n\n  constructor (myParent: any) {\n    this.game = myParent\n    this.gaoToFollow = null\n    this.borderX = 200\n    this.borderY = 100\n  }\n\n  /**\n   *  Tells the Camera to follow a specific GameObject\n   * @param gameObject  the GameObject to follow\n   */\n  Follow (gameObject: any) {\n    this.gaoToFollow = gameObject\n    this.Update(0) // To avoid glitches, bad\n  }\n\n  /**\n   * Update the position of the camera if any object must be followed\n   * @param delta\n   */\n  Update (delta: any) {\n    if (this.gaoToFollow) {\n      this.game.app.stage.position.x =\n        -this.gaoToFollow.x + this.game.app.renderer.width / 2\n\n      this.game.app.stage.position.y =\n        -this.gaoToFollow.y + this.game.app.renderer.height / 2\n    } else {\n      this.game.app.stage.position.x = 0\n      this.game.app.stage.position.y = 0\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CutScene.html":{"url":"classes/CutScene.html","title":"class - CutScene","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CutScene\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cutscene.ts\n        \n\n            \n                Description\n            \n            \n                This is a description of the CutScene\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentScene\n                            \n                            \n                                destX\n                            \n                            \n                                destY\n                            \n                            \n                                jsonObject\n                            \n                            \n                                name\n                            \n                            \n                                room\n                            \n                            \n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                EndAction\n                            \n                            \n                                Move\n                            \n                            \n                                Update\n                            \n                            \n                                Wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, myParent: Room, jsonObject: any)\n                    \n                \n                        \n                            \n                                Defined in src/cutscene.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        myParent\n                                                  \n                                                        \n                                                                    Room\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jsonObject\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentScene\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentScene:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/cutscene.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destX\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        destX:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/cutscene.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        destY:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/cutscene.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jsonObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jsonObject:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/cutscene.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/cutscene.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            room\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        room:     Room\n\n                    \n                \n                    \n                        \n                            Type :     Room\n\n                        \n                    \n                        \n                            \n                                    Defined in src/cutscene.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timer:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/cutscene.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EndAction\n                            \n                            \n                        \n                    \n                \n                \n                    \nEndAction()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/cutscene.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Move\n                            \n                            \n                        \n                    \n                \n                \n                    \nMove(objectName: string, x: number, y: number, relative: boolean, speed: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/cutscene.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        objectName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        x\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        y\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        relative\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        speed\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Update\n                            \n                            \n                        \n                    \n                \n                \n                    \nUpdate(delta: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/cutscene.ts:100\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        delta\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Wait\n                            \n                            \n                        \n                    \n                \n                \n                    \nWait(nbSeconds: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/cutscene.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nbSeconds\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as PIXI from 'pixi.js'\nimport Debug from 'debug'\nimport { Room } from './room'\nimport { GameObject } from './gameobject'\nimport { Utils } from './utils'\nconst debug = Debug('OhYes')\n\n/** This is a description of the CutScene\n */\nexport class CutScene {\n  jsonObject: any\n  timer: number\n  currentScene: number\n  name: string\n  room: Room\n  destX: number\n  destY: number\n\n  constructor (name: string, myParent: Room, jsonObject: any) {\n    this.name = name\n    this.room = myParent\n    this.jsonObject = jsonObject\n    this.timer = 0\n    this.currentScene = 0\n    this.destX = -1\n    this.destY = -1\n  }\n\n  Wait (nbSeconds: number) {\n    // debug('Wait ' + nbSeconds)\n    this.timer++\n    // TODO change this to ticker.fps\n    if (this.timer > nbSeconds * 60) {\n      this.timer = 0\n      this.EndAction()\n    }\n  }\n\n  Move (\n    objectName: string,\n    x: number,\n    y: number,\n    relative: boolean,\n    speed: number\n  ) {\n    debug('Move ' + objectName + ' ' + x + ' ' + y)\n\n    let tempGAO: GameObject = this.room.GetGAOByName(objectName)\n    if (tempGAO === undefined) {\n      debug(objectName + ' object cannot be found ')\n      return\n    }\n    if (this.destX === -1 && this.destY === -1) {\n      if (relative === true) {\n        this.destX = tempGAO.x + x\n        this.destY = tempGAO.y + y\n      } else {\n        this.destX = x\n        this.destY = y\n      }\n    }\n\n    let distanceToTarget: number = Utils.PointDistance(\n      tempGAO.x,\n      tempGAO.y,\n      this.destX,\n      this.destY\n    )\n    debug('distanceToTarget ' + distanceToTarget)\n    if (distanceToTarget >= speed) {\n      let angle: number = Utils.PointDirection(\n        tempGAO.x,\n        tempGAO.y,\n        this.destX,\n        this.destY\n      )\n\n      debug(angle)\n      let ldirx: number = Utils.LengthDirX(speed, angle)\n      let ldiry: number = Utils.LengthDirY(speed, angle)\n      tempGAO.x += ldirx\n      tempGAO.y += ldiry\n    } else {\n      tempGAO.x = this.destX\n      tempGAO.y = this.destY\n      this.destX = -1\n      this.destY = -1\n      this.EndAction()\n    }\n  }\n\n  EndAction () {\n    this.currentScene++\n    debug('EndAction')\n    if (this.currentScene >= this.jsonObject.scenes.length) {\n      this.currentScene = -1\n    }\n  }\n\n  Update (delta: any): boolean {\n    if (this.currentScene === -1) return false\n\n    eval('this.' + this.jsonObject.scenes[this.currentScene].action)\n    return true\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Game.html":{"url":"classes/Game.html","title":"class - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/index.ts\n        \n\n            \n                Description\n            \n            \n                Game Class  \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                app\n                            \n                            \n                                camera\n                            \n                            \n                                currentRoomKey\n                            \n                            \n                                groups\n                            \n                            \n                                input\n                            \n                            \n                                layers\n                            \n                            \n                                mousePosition\n                            \n                            \n                                nextRoomKey\n                            \n                            \n                                rooms\n                            \n                            \n                                UI\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddRoom\n                            \n                            \n                                CheckRoomTransition\n                            \n                            \n                                GetCurrentRoom\n                            \n                            \n                                GetCurrentRoomHeight\n                            \n                            \n                                GetCurrentRoomWidth\n                            \n                            \n                                Init\n                            \n                            \n                                OnLoadedDone\n                            \n                            \n                                RoomGoto\n                            \n                            \n                                Update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newWidth: number, newHeight: number)\n                    \n                \n                        \n                            \n                                Defined in src/index.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newWidth\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        newHeight\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            app\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        app:     PIXI.Application\n\n                    \n                \n                    \n                        \n                            Type :     PIXI.Application\n\n                        \n                    \n                        \n                            \n                                    Defined in src/index.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            camera\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        camera:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/index.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentRoomKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentRoomKey:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/index.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groups\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        groups:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/index.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/index.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layers:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/index.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mousePosition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mousePosition:     PIXI.Point\n\n                    \n                \n                    \n                        \n                            Type :     PIXI.Point\n\n                        \n                    \n                        \n                            \n                                    Defined in src/index.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextRoomKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nextRoomKey:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/index.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rooms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rooms:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/index.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        UI:     PIXI.Container\n\n                    \n                \n                    \n                        \n                            Type :     PIXI.Container\n\n                        \n                    \n                        \n                            \n                                    Defined in src/index.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AddRoom\n                            \n                            \n                        \n                    \n                \n                \n                    \nAddRoom(roomToAdd: Room)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/index.ts:103\n                            \n                        \n\n\n                \n                    \n                            Add a new Room to the list of rooms\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        roomToAdd\n                                                        \n                                                                    Room\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe room object itself\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CheckRoomTransition\n                            \n                            \n                        \n                    \n                \n                \n                    \nCheckRoomTransition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/index.ts:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GetCurrentRoom\n                            \n                            \n                        \n                    \n                \n                \n                    \nGetCurrentRoom()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/index.ts:153\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GetCurrentRoomHeight\n                            \n                            \n                        \n                    \n                \n                \n                    \nGetCurrentRoomHeight()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/index.ts:164\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GetCurrentRoomWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \nGetCurrentRoomWidth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/index.ts:157\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Init\n                            \n                            \n                        \n                    \n                \n                \n                    \nInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/index.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OnLoadedDone\n                            \n                            \n                        \n                    \n                \n                \n                    \nOnLoadedDone()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/index.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RoomGoto\n                            \n                            \n                        \n                    \n                \n                \n                    \nRoomGoto(roomKey: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/index.ts:114\n                            \n                        \n\n\n                \n                    \n                            Goto to a specific room\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        roomKey\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe Room name\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Update\n                            \n                            \n                        \n                    \n                \n                \n                    \nUpdate(delta: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/index.ts:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        delta\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Camera } from './camera'\nimport { Input } from './input'\n\nimport * as PIXI from 'pixi.js'\n\nimport Debug from 'debug'\nimport { Room } from './room'\n\nexport * from './input'\nexport * from './room'\nexport * from './gameobject'\nexport * from './tilemap'\nexport * from './tilelayer'\nexport * from './utils'\nexport * from './cutscene'\nexport * from './astar'\nconst debug = Debug('OhYes')\n\n/** Game Class  */\nexport class Game {\n  currentRoomKey: string\n  rooms: Map\n  camera: any\n  input: any\n  groups: any\n  app: PIXI.Application\n  nextRoomKey: any\n  layers: any\n  mousePosition: PIXI.Point\n  UI: PIXI.Container\n\n  constructor (newWidth: number, newHeight: number) {\n    debug(\n      '%c rpgbaker use pixi version ' + PIXI.VERSION,\n      'background: #222;color: #00ffff'\n    )\n    debug('%c test', 'color: #ff0000')\n\n    this.rooms = new Map()\n    this.layers = new Map()\n    this.groups = new Map()\n\n    this.app = new PIXI.Application({\n      width: newWidth, // default: 800\n      height: newHeight, // default: 600\n      antialias: false, // default: false\n      transparent: false, // default: false\n      resolution: 1 // default: 1\n    })\n\n    this.mousePosition = new PIXI.Point()\n\n    this.app.view.addEventListener('mousewheel', (ev: any) => {\n      this.mousePosition.set(ev.clientX, ev.clientY) // get global position\n\n      // returns element directly under mouse\n      const found = this.app.renderer.plugins.interaction.hitTest(\n        this.mousePosition,\n        this.app.stage\n      )\n\n      // Dispatch scroll event\n      if (found) {\n        found.emit('scroll', ev)\n      }\n    })\n\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST\n\n    // Add the canvas that Pixi automatically created for you to the HTML document\n    document.body.appendChild(this.app.view)\n\n    this.currentRoomKey = ''\n    this.nextRoomKey = ''\n\n    this.camera = new Camera(this)\n    this.input = new Input()\n\n    this.OnLoadedDone = this.OnLoadedDone.bind(this)\n  }\n  Init () {\n    // load an image and run the `setup` function when it's done\n    PIXI.loader.load(this.OnLoadedDone)\n\n    // Maybe one day this.input.Init()\n  }\n\n  OnLoadedDone () {\n    debug('OnLoadedDone')\n\n    this.UI = new PIXI.Container()\n    this.app.stage.addChild(this.UI)\n\n    debug('Start the game loop')\n    this.app.ticker.add((delta: any) => this.Update(delta))\n  }\n\n  /**\n   * Add a new Room to the list of rooms\n   * @param {string} roomKey - The Room key name\n   * @param {Room} roomToAdd - The room object itself\n   */\n  AddRoom (roomToAdd: Room) {\n    this.app.stage.addChild(roomToAdd)\n    this.rooms.set(roomToAdd.name, roomToAdd)\n    this.rooms.get(roomToAdd.name).visible = false\n    roomToAdd.SetGame(this)\n  }\n\n  /**\n   * Goto to a specific room\n   * @param {string} roomKey - The Room name\n   */\n  RoomGoto (roomKey: any) {\n    this.nextRoomKey = roomKey\n  }\n\n  CheckRoomTransition () {\n    if (this.currentRoomKey !== this.nextRoomKey) {\n      let oldRoom = this.rooms.get(this.currentRoomKey)\n      let newRoom = this.rooms.get(this.nextRoomKey)\n\n      if (oldRoom) {\n        oldRoom.TransferPersistentObjectsTo(newRoom)\n        oldRoom.Destroy()\n      }\n      this.currentRoomKey = this.nextRoomKey\n\n      newRoom.Init()\n\n      for (let [, val] of this.rooms.entries()) {\n        val.visible = false\n      }\n      newRoom.visible = true\n    }\n  }\n  Update (delta: any) {\n    // message.setText(Math.round(app.ticker.FPS))\n    this.input.Update()\n    this.camera.Update(delta)\n    this.CheckRoomTransition()\n    for (let [key, val] of this.rooms.entries()) {\n      // TODO change this\n      if (key === this.currentRoomKey) {\n        val.Update(delta)\n      }\n    }\n\n    this.UI.x = -this.app.stage.x\n    this.UI.y = -this.app.stage.y\n  }\n\n  GetCurrentRoom () {\n    return this.rooms.get(this.currentRoomKey)\n  }\n\n  GetCurrentRoomWidth () {\n    let currentRoom: Room = this.GetCurrentRoom()\n    if (currentRoom) {\n      return currentRoom.roomWidth\n    } else return 0\n  }\n\n  GetCurrentRoomHeight () {\n    let currentRoom: Room = this.GetCurrentRoom()\n    if (currentRoom) {\n      return currentRoom.roomHeight\n    } else return 0\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameObject.html":{"url":"classes/GameObject.html","title":"class - GameObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameObject\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gameobject.ts\n        \n\n            \n                Description\n            \n            \n                This is a description of the GameObject\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alarms\n                            \n                            \n                                graphicsHitArea\n                            \n                            \n                                hitArea\n                            \n                            \n                                jsonObject\n                            \n                            \n                                name\n                            \n                            \n                                persistent\n                            \n                            \n                                room\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CollisionRectangle\n                            \n                            \n                                Destroy\n                            \n                            \n                                Init\n                            \n                            \n                                InstancePlace\n                            \n                            \n                                OffsetPosition\n                            \n                            \n                                OnAlarm\n                            \n                            \n                                OnRoomEnd\n                            \n                            \n                                OnRoomStart\n                            \n                            \n                                PlaceMeeting\n                            \n                            \n                                SetAlarm\n                            \n                            \n                                SetHitArea\n                            \n                            \n                                SetPosition\n                            \n                            \n                                Update\n                            \n                            \n                                With\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, myParent: Room, jsonObject: any)\n                    \n                \n                        \n                            \n                                Defined in src/gameobject.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        myParent\n                                                  \n                                                        \n                                                                    Room\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jsonObject\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarms:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/gameobject.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphicsHitArea\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        graphicsHitArea:     PIXI.Graphics\n\n                    \n                \n                    \n                        \n                            Type :     PIXI.Graphics\n\n                        \n                    \n                        \n                            \n                                    Defined in src/gameobject.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hitArea\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hitArea:     PIXI.Rectangle\n\n                    \n                \n                    \n                        \n                            Type :     PIXI.Rectangle\n\n                        \n                    \n                        \n                            \n                                    Defined in src/gameobject.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jsonObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jsonObject:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/gameobject.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/gameobject.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            persistent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        persistent:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/gameobject.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            room\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        room:     Room\n\n                    \n                \n                    \n                        \n                            Type :     Room\n\n                        \n                    \n                        \n                            \n                                    Defined in src/gameobject.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CollisionRectangle\n                            \n                            \n                        \n                    \n                \n                \n                    \nCollisionRectangle(x1: number, y1: number, x2: number, y2: number, classNameToCheck: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/gameobject.ts:130\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        x1\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        y1\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        x2\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        y2\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        classNameToCheck\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     GameObject\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/gameobject.ts:93\n                            \n                        \n\n\n                \n                    \n                            This is a description of the Destroy function. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Init\n                            \n                            \n                        \n                    \n                \n                \n                    \nInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/gameobject.ts:47\n                            \n                        \n\n\n                \n                    \n                            This is a description of the Init function. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            InstancePlace\n                            \n                            \n                        \n                    \n                \n                \n                    \nInstancePlace(x: any, y: any, classNameToCheck: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/gameobject.ts:196\n                            \n                        \n\n\n                \n                    \n                            Returns an object  if there is an instance of classNameToCheck at position (x,y) or null\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        x\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                x position to check\n\n                                                        \n                                                \n                                                \n                                                        y\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                y position to check\n\n                                                        \n                                                \n                                                \n                                                        classNameToCheck\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                className to check\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     GameObject\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OffsetPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \nOffsetPosition(x: number, y: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/gameobject.ts:226\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        x\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        y\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OnAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \nOnAlarm(alarmIndex: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/gameobject.ts:115\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alarmIndex\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OnRoomEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \nOnRoomEnd()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/gameobject.ts:252\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OnRoomStart\n                            \n                            \n                        \n                    \n                \n                \n                    \nOnRoomStart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/gameobject.ts:248\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PlaceMeeting\n                            \n                            \n                        \n                    \n                \n                \n                    \nPlaceMeeting(x: any, y: any, classNameToCheck: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/gameobject.ts:165\n                            \n                        \n\n\n                \n                    \n                            Returns true if there is an instance of classNameToCheck at position (x,y)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        x\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                x position to check\n\n                                                        \n                                                \n                                                \n                                                        y\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                y position to check\n\n                                                        \n                                                \n                                                \n                                                        classNameToCheck\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                className to check\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SetAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \nSetAlarm(alarmIndex: any, alarmNbTicks: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/gameobject.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alarmIndex\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        alarmNbTicks\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SetHitArea\n                            \n                            \n                        \n                    \n                \n                \n                    \nSetHitArea(newRectangle: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/gameobject.ts:75\n                            \n                        \n\n\n                \n                    \n                            Change the hit area to a new rectangle\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newRectangle\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SetPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \nSetPosition(x: number, y: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/gameobject.ts:220\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        x\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        y\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Update\n                            \n                            \n                        \n                    \n                \n                \n                    \nUpdate(delta: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/gameobject.ts:96\n                            \n                        \n\n\n                \n                    \n                            This is a description of the Update function. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        delta\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            With\n                            \n                            \n                        \n                    \n                \n                \n                    \nWith(classNameToCheck: any, callback: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/gameobject.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        classNameToCheck\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        It is very easy to create a new object.\nBut, unfortunately, an empty object is often useless\nThe hard part will be in the object itself.\nAt least, this sample code gives you the impression that\nmaking a game object is easy.\nSo let's enjoy this moment of simplicity\nimport { GameObject } from \"rpgbaker\";\n\nexport default class MyNewObject extends GameObject {}\n    \n\n    \n        import { Utils } from './utils'\n\nimport * as PIXI from 'pixi.js'\nimport Debug from 'debug'\nimport { Room } from './room'\nconst debug = Debug('OhYes')\n\n// const debug = require('debug')('OhYes')\n/** This is a description of the GameObject\n\n */\n\nexport class GameObject extends PIXI.Container {\n  name: string\n  room: Room\n  jsonObject: any\n  persistent: boolean\n  alarms: any\n  graphicsHitArea: PIXI.Graphics\n  hitArea: PIXI.Rectangle\n\n  constructor (name: string, myParent: Room, jsonObject: any) {\n    super()\n    this.name = name\n    this.room = myParent\n    this.jsonObject = jsonObject\n\n    if (this.jsonObject) {\n      this.x = this.jsonObject.x\n      this.y = this.jsonObject.y\n      this.width = this.jsonObject.width\n      this.height = this.jsonObject.height\n    } else {\n      this.x = 0\n      this.y = 0\n      this.width = 0\n      this.height = 0\n    }\n\n    this.persistent = false\n    this.alarms = {}\n\n    // this.pivot.x = this.width / 2\n    // this.pivot.y = this.height / 2\n  }\n  /** This is a description of the Init function. */\n  Init () {\n    if (this.jsonObject) {\n      this.hitArea = new PIXI.Rectangle(\n        0,\n        0,\n        this.jsonObject.width,\n        this.jsonObject.height\n      )\n      this.graphicsHitArea = new PIXI.Graphics()\n      this.graphicsHitArea.beginFill(0xffff00)\n      this.graphicsHitArea.lineStyle(1, 0xffff00)\n\n      this.graphicsHitArea.drawRect(\n        this.hitArea.x,\n        this.hitArea.y,\n        this.hitArea.width,\n        this.hitArea.height\n      )\n\n      this.addChild(this.graphicsHitArea)\n      this.graphicsHitArea.alpha = 0\n    }\n  }\n\n  /**\n   * Change the hit area to a new rectangle\n   * @param {*} newRectangle\n   */\n  SetHitArea (newRectangle: any) {\n    this.removeChild(this.graphicsHitArea)\n    this.hitArea = newRectangle\n    this.graphicsHitArea = new PIXI.Graphics()\n    this.graphicsHitArea.beginFill(0xffff00)\n    this.graphicsHitArea.lineStyle(1, 0xffff00)\n\n    this.graphicsHitArea.drawRect(\n      this.hitArea.x,\n      this.hitArea.y,\n      this.hitArea.width,\n      this.hitArea.height\n    )\n\n    this.addChild(this.graphicsHitArea)\n    this.graphicsHitArea.alpha = 0\n  }\n  /** This is a description of the Destroy function. */\n  Destroy () {}\n\n  /** This is a description of the Update function. */\n  Update (delta: any) {\n    // foreach alarms, if alarm = 0 call OnAlarm()\n    for (var propertyName in this.alarms) {\n      // propertyName is what you want\n      // you can get the value like this: myObject[propertyName]\n      if (this.alarms[propertyName] > 0) {\n        this.alarms[propertyName]--\n      } else {\n        delete this.alarms[propertyName]\n        this.OnAlarm(propertyName)\n      }\n    }\n  }\n\n  SetAlarm (alarmIndex: any, alarmNbTicks: any) {\n    // debug('generic SetAlarm ' + alarmIndex + ' ' + alarmNbTicks)\n    this.alarms[alarmIndex] = alarmNbTicks\n  }\n\n  OnAlarm (alarmIndex: any) {\n    // debug('generic OnAlarm ' + alarmIndex)\n  }\n\n  With (classNameToCheck: any, callback: any) {\n    let gaos = this.room.gaos\n\n    for (let i = 0; i  this.room.roomWidth) {\n      this.x = this.room.roomWidth - (hitBox1.x + hitBox1.width)\n    }\n\n    this.y += y\n    if (this.y + hitBox1.y  this.room.roomHeight) {\n      this.y = this.room.roomHeight - (hitBox1.y + hitBox1.height)\n    }\n  }\n\n  OnRoomStart () {\n    debug('OnRoomStart')\n  }\n\n  OnRoomEnd () {\n    debug('OnRoomEnd')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Graph.html":{"url":"classes/Graph.html","title":"class - Graph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Graph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/astar.ts\n        \n\n            \n                Description\n            \n            \n                A graph memory structure\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                diagonal\n                            \n                            \n                                dirtyNodes\n                            \n                            \n                                grid\n                            \n                            \n                                nodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CleanDirty\n                            \n                            \n                                Init\n                            \n                            \n                                MarkDirty\n                            \n                            \n                                Neighbors\n                            \n                            \n                                ToString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gridIn: any, options: any)\n                    \n                \n                        \n                            \n                                Defined in src/astar.ts:153\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridIn\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            diagonal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        diagonal:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/astar.ts:151\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dirtyNodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dirtyNodes:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/astar.ts:153\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        grid:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/astar.ts:152\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nodes:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/astar.ts:150\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CleanDirty\n                            \n                            \n                        \n                    \n                \n                \n                    \nCleanDirty()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/astar.ts:178\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Init\n                            \n                            \n                        \n                    \n                \n                \n                    \nInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/astar.ts:171\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MarkDirty\n                            \n                            \n                        \n                    \n                \n                \n                    \nMarkDirty(node: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/astar.ts:185\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Neighbors\n                            \n                            \n                        \n                    \n                \n                \n                    \nNeighbors(node: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/astar.ts:189\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ToString\n                            \n                            \n                        \n                    \n                \n                \n                    \nToString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/astar.ts:240\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class AStar {\n  static Search (\n    graph: Graph,\n    start: GridNode,\n    end: GridNode,\n    options: any\n  ): GridNode[] {\n    graph.CleanDirty()\n    options = options || {}\n    var heuristic = this.Manhattan\n    var closest = options.closest || false\n\n    var openHeap = new BinaryHeap(function (node: any) {\n      return node.f\n    })\n    var closestNode = start // set the start node to be the closest if required\n\n    start.h = heuristic(start, end)\n    graph.MarkDirty(start)\n\n    openHeap.Push(start)\n\n    while (openHeap.Size() > 0) {\n      // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n      var currentNode = openHeap.Pop()\n\n      // End case -- result has been found, return the traced path.\n      if (currentNode === end) {\n        return AStar.pathTo(currentNode)\n      }\n\n      // Normal case -- move currentNode from open to closed, process each of its neighbors.\n      currentNode.closed = true\n\n      // Find all neighbors for the current node.\n      var neighbors = graph.Neighbors(currentNode)\n\n      for (var i = 0, il = neighbors.length; i  0) {\n      this.content[0] = end\n      this.BubbleUp(0)\n    }\n    return result\n  }\n  Remove (node: any) {\n    var i = this.content.indexOf(node)\n\n    // When it is found, the process seen in 'pop' is repeated\n    // to fill up the hole.\n    var end = this.content.pop()\n\n    if (i !== this.content.length - 1) {\n      this.content[i] = end\n\n      if (this.scoreFunction(end)  0) {\n      // Compute the parent element's index, and fetch it.\n      var parentN = ((n + 1) >> 1) - 1\n      var parent = this.content[parentN]\n      // Swap the elements if the parent is greater.\n      if (this.scoreFunction(element) \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GridNode.html":{"url":"classes/GridNode.html","title":"class - GridNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GridNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/astar.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                closed\n                            \n                            \n                                f\n                            \n                            \n                                g\n                            \n                            \n                                h\n                            \n                            \n                                parent\n                            \n                            \n                                visited\n                            \n                            \n                                weight\n                            \n                            \n                                x\n                            \n                            \n                                y\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                GetCost\n                            \n                            \n                                IsWall\n                            \n                            \n                                ToString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(x: any, y: any, weight: any)\n                    \n                \n                        \n                            \n                                Defined in src/astar.ts:265\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        x\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        y\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weight\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        closed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/astar.ts:264\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            f\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        f:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/astar.ts:260\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            g\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        g:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/astar.ts:261\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            h\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        h:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/astar.ts:262\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parent:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/astar.ts:265\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visited\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visited:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/astar.ts:263\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            weight\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weight:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/astar.ts:258\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            x\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        x:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/astar.ts:256\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        y:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/astar.ts:257\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GetCost\n                            \n                            \n                        \n                    \n                \n                \n                    \nGetCost(fromNeighbor: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/astar.ts:277\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fromNeighbor\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            IsWall\n                            \n                            \n                        \n                    \n                \n                \n                    \nIsWall()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/astar.ts:285\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ToString\n                            \n                            \n                        \n                    \n                \n                \n                    \nToString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/astar.ts:273\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class AStar {\n  static Search (\n    graph: Graph,\n    start: GridNode,\n    end: GridNode,\n    options: any\n  ): GridNode[] {\n    graph.CleanDirty()\n    options = options || {}\n    var heuristic = this.Manhattan\n    var closest = options.closest || false\n\n    var openHeap = new BinaryHeap(function (node: any) {\n      return node.f\n    })\n    var closestNode = start // set the start node to be the closest if required\n\n    start.h = heuristic(start, end)\n    graph.MarkDirty(start)\n\n    openHeap.Push(start)\n\n    while (openHeap.Size() > 0) {\n      // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n      var currentNode = openHeap.Pop()\n\n      // End case -- result has been found, return the traced path.\n      if (currentNode === end) {\n        return AStar.pathTo(currentNode)\n      }\n\n      // Normal case -- move currentNode from open to closed, process each of its neighbors.\n      currentNode.closed = true\n\n      // Find all neighbors for the current node.\n      var neighbors = graph.Neighbors(currentNode)\n\n      for (var i = 0, il = neighbors.length; i  0) {\n      this.content[0] = end\n      this.BubbleUp(0)\n    }\n    return result\n  }\n  Remove (node: any) {\n    var i = this.content.indexOf(node)\n\n    // When it is found, the process seen in 'pop' is repeated\n    // to fill up the hole.\n    var end = this.content.pop()\n\n    if (i !== this.content.length - 1) {\n      this.content[i] = end\n\n      if (this.scoreFunction(end)  0) {\n      // Compute the parent element's index, and fetch it.\n      var parentN = ((n + 1) >> 1) - 1\n      var parent = this.content[parentN]\n      // Swap the elements if the parent is greater.\n      if (this.scoreFunction(element) \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Room.html":{"url":"classes/Room.html","title":"class - Room","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Room\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/room.ts\n        \n\n            \n                Description\n            \n            \n                This is a description of the Room\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                game\n                            \n                            \n                                    Public\n                                gaos\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                roomHeight\n                            \n                            \n                                roomWidth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddGAO\n                            \n                            \n                                Destroy\n                            \n                            \n                                GetGAOByName\n                            \n                            \n                                Init\n                            \n                            \n                                SetGame\n                            \n                            \n                                TransferPersistentObjectsTo\n                            \n                            \n                                Update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/room.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            game\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        game:     Game\n\n                    \n                \n                    \n                        \n                            Type :     Game\n\n                        \n                    \n                        \n                            \n                                    Defined in src/room.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gaos\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gaos:     GameObject[]\n\n                    \n                \n                    \n                        \n                            Type :     GameObject[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/room.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/room.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roomHeight\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roomHeight:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/room.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roomWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roomWidth:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/room.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AddGAO\n                            \n                            \n                        \n                    \n                \n                \n                    \nAddGAO(newObject: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/room.ts:50\n                            \n                        \n\n\n                \n                    \n                            Add Game Object to the list of gameObjects for this room.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        newObject\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                object to add\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/room.ts:88\n                            \n                        \n\n\n                \n                    \n                            Called when the room is destroyed. Try to destroy all gaos\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GetGAOByName\n                            \n                            \n                        \n                    \n                \n                \n                    \nGetGAOByName(nameToGet: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/room.ts:59\n                            \n                        \n\n\n                \n                    \n                            Try to find a GAO by its name\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nameToGet\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     GameObject\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Init\n                            \n                            \n                        \n                    \n                \n                \n                    \nInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/room.ts:25\n                            \n                        \n\n\n                \n                    \n                            This is a description of the Init function. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SetGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nSetGame(newGame: Game)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/room.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newGame\n                                                        \n                                                                    Game\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TransferPersistentObjectsTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nTransferPersistentObjectsTo(newRoom: Room)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/room.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newRoom\n                                                        \n                                                                    Room\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Update\n                            \n                            \n                        \n                    \n                \n                \n                    \nUpdate(delta: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/room.ts:39\n                            \n                        \n\n\n                \n                    \n                            This is a description of the Update function. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        delta\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Create your room by subclassing a Room\nimport { Room } from 'rpgbaker'\n\nexport default class RoomMenu extends Room {\nInit () {\nconsole.log('RoomMenu Init')\nsuper.Init()\n}\n\nUpdate (delta) {\nsuper.Update(delta)\n}\n}Add your new Room to your Game\nimport { Game } from 'rpgbaker'\nimport RoomMenu from './rooms/room_menu'\n\nlet myGame = new Game(800, 600)\n\nmyGame.AddRoom('MenuRoom', new RoomMenu())\nmyGame.Init()\nmyGame.RoomGoto('MainRoom')\n    \n\n    \n        import * as PIXI from 'pixi.js'\nimport Debug from 'debug'\nimport { GameObject } from './gameobject'\nimport { Game } from './index'\nconst debug = Debug('OhYes')\n\n/** This is a description of the Room\n * @tutorial tutorial-room\n */\nexport class Room extends PIXI.Container {\n  public gaos: GameObject[]\n  private game: Game\n  public name: string\n\n  roomWidth: number = 0\n  roomHeight: number = 0\n\n  constructor (name: string) {\n    super()\n    this.gaos = []\n    this.game = undefined\n    this.name = name\n  }\n  /** This is a description of the Init function. */\n  Init () {\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TileLayer.html":{"url":"classes/TileLayer.html","title":"class - TileLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TileLayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tilelayer.ts\n        \n\n            \n                Description\n            \n            \n                This is a description of the TileLayer\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isObjectLayer\n                            \n                            \n                                jsonObject\n                            \n                            \n                                loadCallback\n                            \n                            \n                                myParent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                GetData\n                            \n                            \n                                Init\n                            \n                            \n                                Update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(myParent: any, jsonObject: any, loadCallback: any)\n                    \n                \n                        \n                            \n                                Defined in src/tilelayer.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        myParent\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jsonObject\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadCallback\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isObjectLayer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isObjectLayer:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tilelayer.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jsonObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jsonObject:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tilelayer.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadCallback:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tilelayer.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myParent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        myParent:     TileMap\n\n                    \n                \n                    \n                        \n                            Type :     TileMap\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tilelayer.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GetData\n                            \n                            \n                        \n                    \n                \n                \n                    \nGetData(x: number, y: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/tilelayer.ts:69\n                            \n                        \n\n\n                \n                    \n                            Returns tile data for specified coordinates\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        x\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                x coordinate\n\n                                                        \n                                                \n                                                \n                                                        y\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                y coordinate\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Init\n                            \n                            \n                        \n                    \n                \n                \n                    \nInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/tilelayer.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Update\n                            \n                            \n                        \n                    \n                \n                \n                    \nUpdate(delta: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/tilelayer.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        delta\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as PIXI from 'pixi.js'\nimport { TileMap } from './tilemap'\n\n/** This is a description of the TileLayer\n */\nexport class TileLayer extends PIXI.Container {\n  myParent: TileMap\n  jsonObject: any\n  loadCallback: any\n  isObjectLayer: boolean\n\n  constructor (myParent: any, jsonObject: any, loadCallback: any) {\n    super()\n    this.myParent = myParent\n    this.jsonObject = jsonObject\n    this.loadCallback = loadCallback\n  }\n  Init () {\n    this.isObjectLayer = false\n    if (this.jsonObject.objects !== undefined) {\n      // debug('this is an object layer')\n      this.isObjectLayer = true\n      this.jsonObject.objects.forEach((tempObject: any) => {\n        this.loadCallback(this, tempObject)\n      })\n    }\n    // Load sprites\n    if (this.jsonObject.data !== undefined) {\n      this.jsonObject.data.forEach((tileIdx: any, i: any) => {\n        if (!tileIdx) {\n          return\n        }\n\n        // Here find the right tileset\n        let chosenTileset = this.myParent.FindTilesetForGID(tileIdx)\n        tileIdx = tileIdx - chosenTileset.firstGid\n        let imgX =\n          (tileIdx % (chosenTileset.imageWidth / chosenTileset.tileWidth)) *\n          chosenTileset.tileWidth\n        let imgY =\n          ~~(tileIdx / (chosenTileset.imageWidth / chosenTileset.tileWidth)) *\n          chosenTileset.tileWidth\n\n        let destX = (i % this.jsonObject.width) * chosenTileset.tileWidth\n        let destY = ~~(i / this.jsonObject.width) * chosenTileset.tileWidth\n\n        let tempTexture = new PIXI.Texture(\n          chosenTileset.texture,\n          new PIXI.Rectangle(\n            imgX,\n            imgY,\n            chosenTileset.tileWidth,\n            chosenTileset.tileWidth\n          )\n        )\n\n        let tempSprite = new PIXI.Sprite(tempTexture)\n        tempSprite.x = destX\n        tempSprite.y = destY\n        this.addChild(tempSprite)\n      })\n    }\n  }\n  /**\n   *  Returns tile data for specified coordinates\n   * @param x x coordinate\n   * @param y y coordinate\n   */\n  GetData (x: number, y: number): any {\n    let tempNumber = y * this.jsonObject.width + x\n    return this.jsonObject.data[tempNumber]\n  }\n\n  Update (delta: any) {\n    if (this.isObjectLayer) {\n      this.children.sort((itemA, itemB) => itemA.y - itemB.y)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TileMap.html":{"url":"classes/TileMap.html","title":"class - TileMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TileMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tilemap.ts\n        \n\n            \n                Description\n            \n            \n                This is a description of the TileMap\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                graph\n                            \n                            \n                                grid\n                            \n                            \n                                jsonObject\n                            \n                            \n                                layers\n                            \n                            \n                                loadCallback\n                            \n                            \n                                tilesets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                FindPath\n                            \n                            \n                                FindTilesetForGID\n                            \n                            \n                                Init\n                            \n                            \n                                InitGridFromLayer\n                            \n                            \n                                Update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jsonObject: any, loadCallback: any)\n                    \n                \n                        \n                            \n                                Defined in src/tilemap.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jsonObject\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadCallback\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graph\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        graph:     Graph\n\n                    \n                \n                    \n                        \n                            Type :     Graph\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tilemap.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        grid:     number[][]\n\n                    \n                \n                    \n                        \n                            Type :     number[][]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tilemap.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jsonObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jsonObject:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tilemap.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layers:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tilemap.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadCallback:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tilemap.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tilesets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tilesets:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tilemap.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FindPath\n                            \n                            \n                        \n                    \n                \n                \n                    \nFindPath(fromX: number, fromY: number, toX: number, toY: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/tilemap.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fromX\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fromY\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        toX\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        toY\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     GridNode[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FindTilesetForGID\n                            \n                            \n                        \n                    \n                \n                \n                    \nFindTilesetForGID(gid: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/tilemap.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gid\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Init\n                            \n                            \n                        \n                    \n                \n                \n                    \nInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/tilemap.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            InitGridFromLayer\n                            \n                            \n                        \n                    \n                \n                \n                    \nInitGridFromLayer(layer: TileLayer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/tilemap.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layer\n                                                        \n                                                                    TileLayer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Update\n                            \n                            \n                        \n                    \n                \n                \n                    \nUpdate(delta: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/tilemap.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        delta\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { TileLayer } from './tilelayer'\nimport { TileSet } from './tileset'\nimport * as PIXI from 'pixi.js'\nimport { Graph, GridNode, AStar } from './astar'\n\n/** This is a description of the TileMap\n */\nexport class TileMap extends PIXI.Container {\n  jsonObject: any\n  layers: any\n  tilesets: any\n  loadCallback: any\n  grid: number[][]\n  graph: Graph\n\n  constructor (jsonObject: any, loadCallback: any) {\n    super()\n    this.jsonObject = jsonObject\n    this.layers = {}\n    this.tilesets = {}\n    this.loadCallback = loadCallback\n    this.grid = []\n  }\n\n  // TODO Change this\n  Init () {\n    this.jsonObject.tilesets.forEach((tileset: any) => {\n      // debug('tileset ' + tileset.name)\n      this.tilesets[tileset.name] = new TileSet(this, tileset)\n      this.tilesets[tileset.name].Init()\n    })\n\n    this.jsonObject.layers.forEach((layer: any) => {\n      // debug('renderLayer ' + layer.name)\n      this.layers[layer.name] = new TileLayer(this, layer, this.loadCallback)\n      this.layers[layer.name].Init()\n      // debug('addchild du tile ' + layer.name)\n      if (layer.name === 'Col') {\n        this.InitGridFromLayer(this.layers[layer.name])\n      }\n      this.addChild(this.layers[layer.name])\n    })\n  }\n\n  InitGridFromLayer (layer: TileLayer) {\n    this.grid = []\n    for (let i = 0; i  0 && tempDiff \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TileSet.html":{"url":"classes/TileSet.html","title":"class - TileSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TileSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tileset.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstGid\n                            \n                            \n                                imageHeight\n                            \n                            \n                                imageWidth\n                            \n                            \n                                jsonObject\n                            \n                            \n                                myParent\n                            \n                            \n                                name\n                            \n                            \n                                texture\n                            \n                            \n                                tileHeight\n                            \n                            \n                                tileWidth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(myParent: any, jsonObject: any)\n                    \n                \n                        \n                            \n                                Defined in src/tileset.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        myParent\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jsonObject\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstGid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstGid:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tileset.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageHeight\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        imageHeight:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tileset.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        imageWidth:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tileset.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jsonObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jsonObject:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tileset.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myParent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        myParent:     TileMap\n\n                    \n                \n                    \n                        \n                            Type :     TileMap\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tileset.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tileset.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            texture\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        texture:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tileset.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tileHeight\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tileHeight:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tileset.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tileWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tileWidth:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tileset.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Init\n                            \n                            \n                        \n                    \n                \n                \n                    \nInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/tileset.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as PIXI from 'pixi.js'\nimport { TileMap } from './tilemap'\n\nexport class TileSet {\n  myParent: TileMap\n  jsonObject: any\n  name: any\n  firstGid: any\n  imageWidth: any\n  imageHeight: any\n  tileWidth: any\n  tileHeight: any\n  texture: any\n\n  constructor (myParent: any, jsonObject: any) {\n    this.myParent = myParent\n    this.jsonObject = jsonObject\n  }\n\n  Init () {\n    this.name = this.jsonObject.name\n    this.firstGid = this.jsonObject.firstgid\n    this.imageWidth = this.jsonObject.imagewidth\n    this.imageHeight = this.jsonObject.imageheight\n    this.tileWidth = this.jsonObject.tilewidth\n    this.tileHeight = this.jsonObject.tileheight\n\n    let tempTextureName = 'assets/' + this.jsonObject.image\n    this.texture = PIXI.loader.resources[tempTextureName].texture // TODO Change this\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utils.html":{"url":"classes/Utils.html","title":"class - Utils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                GetRandomBool\n                            \n                            \n                                    Static\n                                GetRandomFloat\n                            \n                            \n                                    Static\n                                GetRandomInt\n                            \n                            \n                                    Static\n                                GetTexturePart\n                            \n                            \n                                    Static\n                                HitTestHardCodedRectangle\n                            \n                            \n                                    Static\n                                HitTestRectangle\n                            \n                            \n                                    Static\n                                LengthDirX\n                            \n                            \n                                    Static\n                                LengthDirY\n                            \n                            \n                                    Static\n                                PointDirection\n                            \n                            \n                                    Static\n                                PointDistance\n                            \n                            \n                                    Static\n                                PointInRectangle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            GetRandomBool\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        GetRandomBool()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/utils.ts:140\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            GetRandomFloat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        GetRandomFloat(min: any, max: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/utils.ts:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        min\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        max\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            GetRandomInt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        GetRandomInt(min: any, max: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/utils.ts:136\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        min\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        max\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            GetTexturePart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        GetTexturePart(texture: any, x: any, y: any, w: any, h: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/utils.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        texture\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        x\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        y\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        w\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        h\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            HitTestHardCodedRectangle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        HitTestHardCodedRectangle(r1: PIXI.Rectangle, r2: PIXI.Container)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/utils.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        r1\n                                                        \n                                                                    PIXI.Rectangle\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        r2\n                                                        \n                                                                    PIXI.Container\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            HitTestRectangle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        HitTestRectangle(r1: PIXI.Container, r2: PIXI.Container)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/utils.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        r1\n                                                        \n                                                                    PIXI.Container\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        r2\n                                                        \n                                                                    PIXI.Container\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            LengthDirX\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        LengthDirX(length: number, angle: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/utils.ts:164\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        length\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        angle\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            LengthDirY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        LengthDirY(length: number, angle: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/utils.ts:168\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        length\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        angle\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PointDirection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        PointDirection(x1: number, y1: number, x2: number, y2: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/utils.ts:148\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        x1\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        y1\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        x2\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        y2\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PointDistance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        PointDistance(x1: number, y1: number, x2: number, y2: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/utils.ts:144\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        x1\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        y1\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        x2\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        y2\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PointInRectangle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        PointInRectangle(x: any, y: any, r1: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/utils.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        x\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        y\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        r1\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as PIXI from 'pixi.js'\n// const PIXI = require('pixi.js')\n\nexport class Utils {\n  static PointInRectangle (x: any, y: any, r1: any) {\n    if (\n      x >= r1.x &&\n      x = r1.y &&\n      y = 0.5\n  }\n\n  static PointDistance (x1: number, y1: number, x2: number, y2: number): number {\n    return Math.hypot(x2 - x1, y2 - y1)\n  }\n\n  static PointDirection (\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number\n  ): number {\n    let deltaX = x2 - x1\n    let deltaY = y2 - y1\n    var aR = Math.atan2(deltaY, deltaX) // Mapped axes!\n    var aD = aR * (180 / Math.PI)\n    if (aD \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/astar.ts\n            \n            \n                class\n            \n            \n                AStar\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/astar.ts\n            \n            \n                class\n            \n            \n                BinaryHeap\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/astar.ts\n            \n            \n                class\n            \n            \n                Graph\n            \n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/astar.ts\n            \n            \n                class\n            \n            \n                GridNode\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/camera.ts\n            \n            \n                class\n            \n            \n                Camera\n            \n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/cutscene.ts\n            \n            \n                class\n            \n            \n                CutScene\n            \n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/cutscene.ts\n            \n            \n                variable\n            \n            \n                debug\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/foo.ts\n            \n            \n                variable\n            \n            \n                hello\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/gameobject.ts\n            \n            \n                class\n            \n            \n                GameObject\n            \n            \n                30 %\n                (7/23)\n            \n        \n        \n            \n                \n                src/gameobject.ts\n            \n            \n                variable\n            \n            \n                debug\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/index.ts\n            \n            \n                class\n            \n            \n                Game\n            \n            \n                14 %\n                (3/21)\n            \n        \n        \n            \n                \n                src/index.ts\n            \n            \n                variable\n            \n            \n                debug\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/input.ts\n            \n            \n                variable\n            \n            \n                debug\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/room.ts\n            \n            \n                class\n            \n            \n                Room\n            \n            \n                42 %\n                (6/14)\n            \n        \n        \n            \n                \n                src/room.ts\n            \n            \n                variable\n            \n            \n                debug\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tilelayer.ts\n            \n            \n                class\n            \n            \n                TileLayer\n            \n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/tilemap.ts\n            \n            \n                class\n            \n            \n                TileMap\n            \n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/tileset.ts\n            \n            \n                class\n            \n            \n                TileSet\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            \n                class\n            \n            \n                Utils\n            \n            \n                0 %\n                (0/12)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @types/debug : 0.0.31\n        \n            debug : ^4.1.0\n        \n            howler : ^2.0.15\n        \n            pixi.js : ^4.8.2\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Keycodes   (src/.../input.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/input.ts\n    \n        \n            \n                \n                    \n                        \n                        Keycodes\n                    \n                \n                        \n                            \n                                 D\n                            \n                        \n                        \n                            \n                                Value : 68\n                            \n                        \n                        \n                            \n                                 P\n                            \n                        \n                        \n                            \n                                Value : 80\n                            \n                        \n                        \n                            \n                                 G\n                            \n                        \n                        \n                            \n                                Value : 71\n                            \n                        \n                        \n                            \n                                 E\n                            \n                        \n                        \n                            \n                                Value : 69\n                            \n                        \n                        \n                            \n                                 W\n                            \n                        \n                        \n                            \n                                Value : 87\n                            \n                        \n                        \n                            \n                                 A\n                            \n                        \n                        \n                            \n                                Value : 65\n                            \n                        \n                        \n                            \n                                 S\n                            \n                        \n                        \n                            \n                                Value : 83\n                            \n                        \n                        \n                            \n                                 F1\n                            \n                        \n                        \n                            \n                                Value : 112\n                            \n                        \n                        \n                            \n                                 ESCAPE\n                            \n                        \n                        \n                            \n                                Value : 27\n                            \n                        \n                        \n                            \n                                 LEFT\n                            \n                        \n                        \n                            \n                                Value : 37\n                            \n                        \n                        \n                            \n                                 UP\n                            \n                        \n                        \n                            \n                                Value : 38\n                            \n                        \n                        \n                            \n                                 RIGHT\n                            \n                        \n                        \n                            \n                                Value : 39\n                            \n                        \n                        \n                            \n                                 DOWN\n                            \n                        \n                        \n                            \n                                Value : 40\n                            \n                        \n                        \n                            \n                                 LEFT_SHIFT\n                            \n                        \n                        \n                            \n                                Value : 16\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nrpgbaker\nminimalist and useless game engine (with rpg elements)\nDocumentation\nHere\nPlease check the demo project on Github\nHere\nOr the Online demo\nHere\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Dominique Dumont\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            debug   (src/.../cutscene.ts)\n                        \n                        \n                            debug   (src/.../gameobject.ts)\n                        \n                        \n                            debug   (src/.../index.ts)\n                        \n                        \n                            debug   (src/.../input.ts)\n                        \n                        \n                            debug   (src/.../room.ts)\n                        \n                        \n                            hello   (src/.../foo.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/cutscene.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     \n\n                    \n                \n                    \n                        \n                            Default value : Debug('OhYes')\n                        \n                    \n\n\n            \n        \n\n    src/gameobject.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     \n\n                    \n                \n                    \n                        \n                            Default value : Debug('OhYes')\n                        \n                    \n\n\n            \n        \n\n    src/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     \n\n                    \n                \n                    \n                        \n                            Default value : Debug('OhYes')\n                        \n                    \n\n\n            \n        \n\n    src/input.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     \n\n                    \n                \n                    \n                        \n                            Default value : Debug('OhYes')\n                        \n                    \n\n\n            \n        \n\n    src/room.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     \n\n                    \n                \n                    \n                        \n                            Default value : Debug('OhYes')\n                        \n                    \n\n\n            \n        \n\n    src/foo.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            hello\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hello:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'hello world!'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/rooms.html":{"url":"additional-documentation/rooms.html","title":"additional-page - Rooms","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCreate your room by subclassing a Room\nimport { Room } from 'rpgbaker'\n\nexport default class RoomMenu extends Room {\nInit () {\nconsole.log('RoomMenu Init')\nsuper.Init()\n}\n\nUpdate (delta) {\nsuper.Update(delta)\n}\n}Add your new Room to your Game\nimport { Game } from 'rpgbaker'\nimport RoomMenu from './rooms/room_menu'\n\nlet myGame = new Game(800, 600)\n\nmyGame.AddRoom('MenuRoom', new RoomMenu())\nmyGame.Init()\nmyGame.RoomGoto('MainRoom')\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/rooms/rooms.html":{"url":"additional-documentation/rooms/rooms.html","title":"additional-page - Rooms","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCreate your room by subclassing a Room\nimport { Room } from 'rpgbaker'\n\nexport default class RoomMenu extends Room {\nInit () {\nconsole.log('RoomMenu Init')\nsuper.Init()\n}\n\nUpdate (delta) {\nsuper.Update(delta)\n}\n}Add your new Room to your Game\nimport { Game } from 'rpgbaker'\nimport RoomMenu from './rooms/room_menu'\n\nlet myGame = new Game(800, 600)\n\nmyGame.AddRoom('MenuRoom', new RoomMenu())\nmyGame.Init()\nmyGame.RoomGoto('MainRoom')\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
